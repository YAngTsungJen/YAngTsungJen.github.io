<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BS5 格線系統（Grid System）</title>
    <url>/2021/05/24/Bootstrap/BS5-%E6%A0%BC%E7%B7%9A%E7%B3%BB%E7%B5%B1%EF%BC%88Grid-System%EF%BC%89/</url>
    <content><![CDATA[<h2 id="什麼是格線系統？"><a href="#什麼是格線系統？" class="headerlink" title="什麼是格線系統？"></a>什麼是格線系統？</h2><ul>
<li>為優化過多的 <code>class</code> 、CSS 而發明</li>
<li>可減輕 magic number 的出現。什麼是 magic number？當設計稿寫：左邊 340 px、右邊 660 px，而你直接在 CSS 寫 <code>width: 340px</code>、 <code>width: 660px</code> ，就是 magic number</li>
<li>以前螢幕寬度大多是 1024*768，所以當時格線系統寬度設計是 <a href="https://960.gs/demo.html">960</a></li>
<li>格線系統是透過 column（欄）、gutter（間距）的數字加總而成</li>
<li>gutter 會以 <code>margin</code> 或 <code>padding</code> 推擠產生<br>（Bootstrap 是用 <code>padding</code> 、<a href="https://960.gs/demo.html">960</a> 是用 <code>margin</code>，使用前可先了解是用哪個推擠的，比較不會出錯）</li>
<li>格線系統使用 <code>float</code> 寫成，而 <code>float</code> 有一特性：超過滿版時，元素會另起一行，也就是掉到第二行（如同 flexbox 的 <code>flex-wrap: wrap</code> ）</li>
<li>格線系統設計成 12 欄的原因：能被比較多數字整除、在瀏覽上也較順利。除了 12 欄以外，也有 16、24 欄，但較少見<span id="more"></span>
<h2 id="Bootstrap-上的格線系統"><a href="#Bootstrap-上的格線系統" class="headerlink" title="Bootstrap 上的格線系統"></a>Bootstrap 上的格線系統</h2></li>
</ul>
<p>排版三劍客： .container 、 .row、 .col 1~12</p>
<ul>
<li><code>.container</code> 是一個容器，可以把內容物居中</li>
<li><code>.container</code> 固定寬度、 <code>.container-fluid</code> 滿版</li>
<li><code>.row</code>： <code>no-gutters</code> 不需要 gutters</li>
</ul>
<h2 id="重要觀念"><a href="#重要觀念" class="headerlink" title="重要觀念"></a>重要觀念</h2><ol>
<li><p>最外層至少一定要有一個 <code>.container</code> ，不然 <code>.row</code> 會自適應螢幕解析度（滿版）</p>
</li>
<li><p><code>.container</code> 的第一層不一定要是 <code>.row</code> ，可以放其他東西</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container green&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>標題<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row yellow&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-3 red&quot;</span>&gt;</span>col-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-9 red&quot;</span>&gt;</span>col-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p><code>.row</code> 裡面只能是 <code>.col</code></p>
</li>
<li><p><code>.col</code> 的外層只能是 <code>.row</code></p>
</li>
<li><p>網頁內容與元件請放在 .col 裡</p>
</li>
</ol>
<blockquote>
<p>記得：container &gt; (xxx可有可無） &gt; row &gt; col &gt; 內容</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container green&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row yellow&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6 red&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 20px&quot;</span>&gt;</span>標題<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>   <span class="comment">&lt;!--h3 不屬於格線系統的設定，可以調整左右寬度 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>內容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6 red&quot;</span>&gt;</span>col-6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6 red&quot;</span>&gt;</span>col-6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="不能做的事"><a href="#不能做的事" class="headerlink" title="不能做的事"></a>不能做的事</h2><ol>
<li>不要在 <code>.col</code> 增加寬度：格線系統已設定好寬度了，不要再增加寬度的 class 自找麻煩</li>
<li>不要在格線系統調整左右的 <code>margin</code> 與 <code>padding</code> ：預設都已設定好一致性，任意調整可能造成破版</li>
</ol>
<h2 id="可以做的事"><a href="#可以做的事" class="headerlink" title="可以做的事"></a>可以做的事</h2><ol>
<li>可以加上下的 margin 與 padding</li>
<li>整體格線邏輯是一致<br>單純使用 .col 沒有數字，會按比例排列</li>
</ol>
<h2 id="錯誤示範"><a href="#錯誤示範" class="headerlink" title="錯誤示範"></a>錯誤示範</h2><blockquote>
<p><code>&lt;h1&gt;</code>不能單獨在外</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>標題<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-3&quot;</span>&gt;</span>選單<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-8&quot;</span>&gt;</span>內容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>row之後只能有col（雙層格線除外），不能再一用一個div包起來</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6&quot;</span>&gt;</span>標題<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6&quot;</span>&gt;</span>標題<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="正確寫法"><a href="#正確寫法" class="headerlink" title="正確寫法"></a>正確寫法</h2><blockquote>
<p>row會自動換行，只要超過格線就會換去下一行</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6&quot;</span>&gt;</span>card1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6&quot;</span>&gt;</span>card2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-6&quot;</span>&gt;</span>card3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>container後面不一定要直接接row，但row之後一定要接col</p>
</blockquote>
<p>  <img src="002.png" alt=" "></p>
<hr>
<blockquote>
<p>如果像下方的排版，請不要開兩行（row)，後端會瘋掉XD!!!</p>
</blockquote>
<p>  <img src="003.png" alt=" "></p>
<hr>
<blockquote>
<p>如果沒設定col-(x)，直接寫col，也是可以的，它會自適應去調整col的寬度。</p>
</blockquote>
<p>  <img src="004.png" alt=" "></p>
<hr>
<blockquote>
<p>下方header、footer滿版，content依照container，也可以的喔！</p>
</blockquote>
<p>  <img src="005.png" alt=" "></p>
<h2 id="BS5-格線系統斷點（Breakpoint）設計"><a href="#BS5-格線系統斷點（Breakpoint）設計" class="headerlink" title="BS5 格線系統斷點（Breakpoint）設計"></a>BS5 格線系統斷點（Breakpoint）設計</h2><p>  <img src="006.png" alt=" "><br>  <img src="007.png" alt=" "></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 此 code 在手機版是兩欄上下排、PC 版則是並排--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span>col-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span>&gt;</span>col-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.row</span>&gt;* &#123;</span><br><span class="line"> ~~<span class="attribute">flex-shrink</span>: <span class="number">0</span>;~~</span><br><span class="line"> ~~<span class="attribute">width</span>: <span class="number">100%</span>;~~</span><br><span class="line"> <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line"> <span class="attribute">padding-right</span>: <span class="built_in">calc</span>(<span class="built_in">var</span>(--bs-gutter-x)/ <span class="number">2</span>);</span><br><span class="line"> <span class="attribute">padding-left</span>: <span class="built_in">calc</span>(<span class="built_in">var</span>(--bs-gutter-x)/ <span class="number">2</span>);</span><br><span class="line"> <span class="attribute">margin-top</span>: <span class="built_in">var</span>(--bs-gutter-y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>)&#123;</span><br><span class="line">   <span class="selector-class">.col-md-4</span> &#123;</span><br><span class="line">       <span class="attribute">flex</span>: <span class="number">0</span> <span class="number">0</span> auto;</span><br><span class="line">       <span class="attribute">width</span>: <span class="number">33.3333333333%</span>;</span><br><span class="line">&#125;</span><br><span class="line">   <span class="selector-class">.col-md-8</span> &#123;</span><br><span class="line">       <span class="attribute">flex</span>: <span class="number">0</span> <span class="number">0</span> auto;</span><br><span class="line">       <span class="attribute">width</span>: <span class="number">66.6666666667%</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<ol>
<li>Bootstrap 格線系統預設六個斷點：極小（xs）、小（sm）、中（md）、大（lg）、特大（xl）、超級大（xxl），也可自定義。</li>
<li>若想先做 PC 版，可用 md、lg 當起手式。</li>
</ol>
</blockquote>
<p>  <img src="008.png" alt=" "></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Bootstrap5 的 media queries*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* small devices (landscape phone, 576px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">576px</span>)&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* medium devices (tablets, 768px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>)&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* large devices (desktops, 992px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">992px</span>)&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* extra large devices (large desktops, 1200px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">1200px</span>)&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* extra large devices (extra large desktops, 1400px and up) */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="number">1400px</span>)&#123; ... &#125;</span><br></pre></td></tr></table></figure>

<h2 id="格線系統和元件的整合"><a href="#格線系統和元件的整合" class="headerlink" title="格線系統和元件的整合"></a>格線系統和元件的整合</h2><ul>
<li><p>容器回歸於容器，元件回歸於元件，不要混寫在一起。元件是小物件，可以放在任何容器裡。</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">  <span class="comment">/* --------不好的寫法，很難應用---------- */</span></span><br><span class="line"><span class="selector-class">.col-4</span> <span class="selector-class">.btn-dark</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* --------好的寫法：把容器（.col-4）和元件（.btn-dark）分開寫，可以使它們應用更廣--------- */</span></span><br><span class="line"><span class="selector-class">.col-4</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-dark</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="網站範例是否有使用格線"><a href="#網站範例是否有使用格線" class="headerlink" title="網站範例是否有使用格線"></a>網站範例是否有使用格線</h2><ul>
<li><a href="https://ithelp.ithome.com.tw/">IT 邦幫忙</a>：手機版時隱藏右側內容</li>
</ul>
<blockquote>
<p>右欄紅框處，在手機版時隱藏，平板以上打開，用 Bootstrap 所下的語法是 d-none d-md-block</p>
</blockquote>
<p>  <img src="009.png" alt=" "></p>
<ul>
<li><p><a href="https://www.hexschool.com/">六角學院</a>：判斷哪些地方有用到 .row 哪些地方沒有</p>
<p><img src="010.png" alt=" "></p>
</li>
</ul>
<p>❌</p>
<p>選單通常不做 column，因為選單的文字是不規則的，且項目可能新增、項目數量無法被 12 整除（比如 7 個）。選單通常會用 Navbar（導覽列）去設計</p>
<p>⭕  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4 col-11 pt-md-0 pt-3 mb-lg-0 mb-5&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4 col-11 pt-md-0 pt-3 mb-lg-0 mb-5&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4 col-11 pt-md-0 pt-3 mb-lg-0 mb-5&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>  <img src="011.png" alt=" "></p>
<ul>
<li>col不一定都從最左開始，只要在row多下一個j-c-c就可以讓裡面的col都置中了<br>⭕  </li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row d-flex justify-content-center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-11 col-md-10 d-flex flex-column&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row d-flex justify-content-center pt-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-11&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4 col-11 mt-md-0 mt-3&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>Navbar 選單通常不會用到row&gt;column，因為文字內容不一樣，而且可能會新增或減少選單，很難對齊column，因此通常用「navbar」。</p>
<p><img src="015.png" alt=" "></p>
</li>
<li><p><a href="https://wcc723.github.io/F2E-PK/products.html">甜點電商</a>：表尾設計 + <code>row</code> 裡面再加 <code>.col</code></p>
<p><img src="012.png" alt=" "></p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">▲ 注意：設計時，格線不要寫得剛剛好，要多留一些距離，避免斷行，而且各個瀏覽器可能會有些許誤差</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--紅框和黃框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row justify-content-center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5 d-flex flex-column justify-content-between&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5 text-right d-none d-md-block&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--藍框和桃紅框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row justify-content-center mt-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5 mt-2&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5 text-md-right mt-2&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>  <img src="013.png" alt=" "></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--左欄文字--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5 d-flex align-items-center justify-content-center justify-content-md-start mb-4 mb-md-0&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--右欄輸入框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="格線裡面還可以有格線"><a href="#格線裡面還可以有格線" class="headerlink" title="格線裡面還可以有格線"></a>格線裡面還可以有格線</h2><p>  <img src="014.png" alt=" "></p>
<ul>
<li><p>有很多 class的話，建議從小寫到大（手機 → 平板 → 電腦）</p>
</li>
<li><p>斷點呈現的先後順序：(類別)-(size)-(屬性) → eg. d-md-row、align-items-lg-center</p>
</li>
<li><p>斷點建議從小寫到大（sm&gt;md&gt;lg&gt;xl）</p>
</li>
<li><p>最外層有一個container → 包著一個row → 左邊col-3是選單 → 右邊col-9是內容 → col-9裡面也想要跟格線系統，所以再加兩個col-6(total:col-12)</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container d-none d-md-block d-md-inline&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-12 col-md-10&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="總結-必須記起來地方"><a href="#總結-必須記起來地方" class="headerlink" title="總結 必須記起來地方"></a>總結 必須記起來地方</h2><ul>
<li>col外層只能是row；row裡面只能放col</li>
<li>container裡不一定是row；row外層不一定是container</li>
<li>網頁內容及元件要放在col裡面</li>
<li>col不一定要加起來有12，但一定不可以加起來超過12</li>
<li>不要在col增加寬度！！！</li>
<li>不要在格線系統調整左右 margin 與 padding！！！</li>
<li>可以加上下 的 margin 與 padding</li>
</ul>
]]></content>
      <categories>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>Boostrap 5 環境建立</title>
    <url>/2021/05/24/Bootstrap/Boostrap-5-%E7%92%B0%E5%A2%83%E5%BB%BA%E7%AB%8B/</url>
    <content><![CDATA[<h2 id="What-is-Bootstrap"><a href="#What-is-Bootstrap" class="headerlink" title="What is Bootstrap?"></a>What is Bootstrap?</h2><p>Bootstrap 是一個由 HTML、CSS 和 JavaScript 寫成的前端框架，核心的設計目標是達成RWD響應式與行動優先，也就是讓你的網站排版可以自動適應螢幕大小。它預先做好一套網站的基礎建設，讓你能在框架的基礎上進行開發，不需要再去煩惱瑣碎的設定。</p>
<span id="more"></span>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol>
<li><p>透過 cdn</p>
<ul>
<li><p>CSS → 於<code>&lt;head&gt;</code>裡引入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>JavaScript -&gt; 於<code>&lt;/body&gt;</code>的結尾處引入</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p><a href="https://getbootstrap.com/docs/5.0/getting-started/download/">本地下載（直接下載到本機）</a></p>
<ul>
<li>看到「Compiled CSS and JS」，按下下載。解壓縮檔案後，嵌入以下檔案即可使用：<ul>
<li><code>css/bootstrap.min.css</code></li>
<li><code>js/bootstrap.bundle.min.js</code></li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="使用方式的優-缺點"><a href="#使用方式的優-缺點" class="headerlink" title="使用方式的優/缺點"></a>使用方式的優/缺點</h2><ol>
<li><p>使用cdn的優/缺點</p>
<ul>
<li>載入速度快</li>
<li>省流量</li>
<li>掛掉就會跟著一起掛掉</li>
<li>版本要更新</li>
</ul>
</li>
<li><p>使用本地的優/缺點</p>
<ul>
<li>可客製化</li>
<li>太大包跑比較久<br>補：也可以下載個別功能不用整包下載</li>
</ul>
</li>
</ol>
<h2 id="如何確認-BootStrap-有安裝成功？"><a href="#如何確認-BootStrap-有安裝成功？" class="headerlink" title="如何確認 BootStrap 有安裝成功？"></a>如何確認 BootStrap 有安裝成功？</h2><p>可以裝設一些 BootStrap 撰寫好的套件來玩玩，像是 按鈕、互動視窗或是卡片。</p>
<h2 id="CSS-Reset"><a href="#CSS-Reset" class="headerlink" title="CSS Reset"></a>CSS Reset</h2><p>清除瀏覽器預設樣式，boostrap本身內就涵有使用<a href="https://bootstrap5.hexschool.com/docs/5.0/content/reboot/">css reset</a>，因此不用另外去載入。</p>
<p>參考資料：<a href="https://www.youtube.com/watch?v=WGu0F7nmQFQ">bootstrap新手實戰營</a></p>
]]></content>
      <categories>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>Bootstrap-元件介紹</title>
    <url>/2021/06/02/Bootstrap/Bootstrap-%E5%85%83%E4%BB%B6%E4%BB%8B%E7%B4%B9/</url>
    <content><![CDATA[<h2 id="互動式窗（Modal）"><a href="#互動式窗（Modal）" class="headerlink" title="互動式窗（Modal）"></a>互動式窗（Modal）</h2><ul>
<li>用在設計稿右上的登入註冊</li>
<li>按鈕的<code>data-bs-target</code>和 Modal 的 id 相同，就可以為一組互動式窗。</li>
<li>若在 Modal最外層加入 <code>data-bs-backdrop=&quot;static&quot; data-bs-keyboard=&quot;false&quot;</code>，可以將背景設置為靜態，互動視窗不會因為點擊背景而關閉。<span id="more"></span></li>
<li>滾動長內容：透過在 <code>.modal-dialog</code> 中加入 <code>.modal-dialog-scrollable</code> 來創建一個 body 可滾動互動視窗</li>
<li>垂直置中：加入 .modal-dialog-centered 到 .modal-dialog 來使互動視窗垂直置中。</li>
<li>有 <code>aria</code>的標籤：是給無障礙人士是使用，通常做無障礙網站是必備的。</li>
<li><a href="https://ithelp.ithome.com.tw/users/20108045/ironman/2454">30篇好文連結</a></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Button trigger modal --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#exampleModal&quot;</span>&gt;</span></span><br><span class="line">  Launch demo modal</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Modal --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">data-bs-backdrop</span>=<span class="string">&quot;static&quot;</span> <span class="attr">data-bs-keyboard</span>=<span class="string">&quot;false&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleModal&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;exampleModalLabel&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleModalLabel&quot;</span>&gt;</span>Modal title<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn-close&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>Save changes<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h2 id="折疊（Collapse）"><a href="#折疊（Collapse）" class="headerlink" title="折疊（Collapse）"></a>折疊（Collapse）</h2><ul>
<li>使用a連結：<code>data-bs-toggle=&quot;collapse&quot; href=&quot;#collapseExample&quot;</code>和內容的 <code>id=&quot;collapseExample&quot;</code>為一組，可以產生折疊效果。</li>
<li>使用button：<code>data-bs-toggle=&quot;collapse&quot; data-bs-target=&quot;#collapseExample&quot;</code>和內容的 <code>id=&quot;collapseExample&quot;</code>為一組，可以產生折疊效果。</li>
<li><code>role=&quot;button&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;collapseExample&quot;</code>為無礙障人士使用。</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#collapseExample&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;collapseExample&quot;</span>&gt;</span></span><br><span class="line">    問題一</span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;collapseExample&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card card-body&quot;</span>&gt;</span></span><br><span class="line">      問題一答案</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#collapseExample2&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;collapseExample&quot;</span>&gt;</span></span><br><span class="line">    問題二</span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;collapseExample2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card card-body&quot;</span>&gt;</span></span><br><span class="line">      問題二答案</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="導覽與頁籤（Navs-and-tabs）"><a href="#導覽與頁籤（Navs-and-tabs）" class="headerlink" title="導覽與頁籤（Navs and tabs）"></a>導覽與頁籤（Navs and tabs）</h2><ul>
<li>使用button：<code>data-bs-toggle=&quot;tab&quot; data-bs-target=&quot;#home&quot;</code> 和 <code>id=&quot;home&quot;</code>為一組</li>
<li>使用a連結：<code>data-bs-toggle=&quot;tab&quot; href=&quot;#home&quot;</code>和<code>id=&quot;home&quot;</code>為一組</li>
<li>active ：若要改變請上下都改。</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Nav tabs --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myTab&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tablist&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span> <span class="attr">role</span>=<span class="string">&quot;presentation&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link active&quot;</span> <span class="attr">id</span>=<span class="string">&quot;home-tab&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#home&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;home&quot;</span> <span class="attr">aria-selected</span>=<span class="string">&quot;true&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span> <span class="attr">role</span>=<span class="string">&quot;presentation&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">id</span>=<span class="string">&quot;profile-tab&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#profile&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;profile&quot;</span> <span class="attr">aria-selected</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Profile<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span> <span class="attr">role</span>=<span class="string">&quot;presentation&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">id</span>=<span class="string">&quot;messages-tab&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#messages&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;messages&quot;</span> <span class="attr">aria-selected</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Messages<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span> <span class="attr">role</span>=<span class="string">&quot;presentation&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">id</span>=<span class="string">&quot;settings-tab&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#settings&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;settings&quot;</span> <span class="attr">aria-selected</span>=<span class="string">&quot;false&quot;</span>&gt;</span>Settings<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Tab panes --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-content&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane active&quot;</span> <span class="attr">id</span>=<span class="string">&quot;home&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tabpanel&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;home-tab&quot;</span>&gt;</span>home<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane&quot;</span> <span class="attr">id</span>=<span class="string">&quot;profile&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tabpanel&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;profile-tab&quot;</span>&gt;</span>profile<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane&quot;</span> <span class="attr">id</span>=<span class="string">&quot;messages&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tabpanel&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;messages-tab&quot;</span>&gt;</span>messages<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane&quot;</span> <span class="attr">id</span>=<span class="string">&quot;settings&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tabpanel&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;settings-tab&quot;</span>&gt;</span>settings<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="卡片（Cards）"><a href="#卡片（Cards）" class="headerlink" title="卡片（Cards）"></a>卡片（Cards）</h2><ul>
<li>去除gutters：使用 .g-0 移除網格的 gutters</li>
<li>斷點設計：使用 .col-md-* 類別讓卡片在 md 斷點之後呈現水平</li>
<li>圖片部分可以使用背景圖 <code>background: url()</code>或是 img標籤來呈現</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card mb-3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-width: 540px;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row g-0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;img-fluid&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://fakeimg.pl/180x250/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;card-title&quot;</span>&gt;</span>Card title<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;card-text&quot;</span>&gt;</span>This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;card-text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">small</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>Last updated 3 mins ago<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card mb-3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-width: 540px;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row g-0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: url(https://miro.medium.com/max/676/1*XEgA1TTwXa5AvAdw40GFow.png) center / contain;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;card-title&quot;</span>&gt;</span>Card title<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;card-text&quot;</span>&gt;</span>This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;card-text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">small</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>Last updated 3 mins ago<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>Bootstrap-客製化</title>
    <url>/2021/06/03/Bootstrap/Bootstrap-%E5%AE%A2%E8%A3%BD%E5%8C%96/</url>
    <content><![CDATA[<h2 id="Bootstrap-客製化"><a href="#Bootstrap-客製化" class="headerlink" title="Bootstrap-客製化"></a>Bootstrap-客製化</h2><blockquote>
<p>npm下載方式：</p>
</blockquote>
<ol>
<li><p>首先，在桌面建立資料夾，再來到<a href="https://bootstrap5.hexschool.com/docs/5.0/getting-started/download/">官網下載區</a>找到下載方法，回到vsCode 輸入指令 <code>npm install bootstrap</code>，即可安裝完成 node_modules。</p>
</li>
<li><p>建立 <strong>SCSS資料夾</strong> ，再資料夾下建立一個主要檔案，用來統整全部的scss檔案，建立 all.scss 。</p>
</li>
<li><p>all.scss 裡載入客製化程式碼。</p>
</li>
<li><p>把 node_modules 裡SCSS資料夾複製一份並改名為 bootstrap 到 <strong>SCSS資料夾</strong> 裡。</p>
</li>
<li><p>在all.scss 的前三個是必要載入的檔案：functions 、variables、mixins。</p>
</li>
<li><p><code>@import &quot;./bootstrap/scss/bootstrap&quot;</code>，這個檔案是直接概括全部的 scss 內容，若是只需要特定元件或是只要隔線系統，就載入自己想要的也可以。</p>
</li>
</ol>
<span id="more"></span>
<pre><code>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">your-project&#x2F;</span><br><span class="line">├── scss</span><br><span class="line">│   └── all.scss</span><br><span class="line">│   └── helpers&#x2F;variables</span><br><span class="line">│   └── base&#x2F;base</span><br><span class="line">│   └── mixins&#x2F;mixins</span><br><span class="line">│   └── components&#x2F;card...</span><br><span class="line">│   └── utilities&#x2F;utilities</span><br><span class="line">│   └── layout&#x2F;navbar...</span><br><span class="line">│   └── pages&#x2F;index...</span><br><span class="line">│   └── bootstrap&#x2F;</span><br><span class="line">└── node_modules&#x2F;bootstrap&#x2F;scss</span><br><span class="line">                            ├── js</span><br><span class="line">                            └── scss</span><br></pre></td></tr></table></figure>

    <figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// bootstrap Required</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./bootstrap/scss/functions&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./helpers/variables&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./bootstrap/scss/mixins&quot;</span>;</span><br><span class="line"><span class="comment">// any optional Bootstrap components as you like</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./bootstrap/scss/bootstrap&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// base 全站設定</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;base/base&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// mixins 自訂 mixins</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;mixins/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// components 自訂 元件</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;components/card&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;components/button&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;components/pagination&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// utilities 自訂 通用類別</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;utilities/position&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// layout </span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;layout/navbar&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// pages</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;pages/index&quot;</span>;</span><br></pre></td></tr></table></figure>
</code></pre>
]]></content>
      <categories>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>Bootstrap-通用類別介紹</title>
    <url>/2021/06/02/Bootstrap/Bootstrap-%E9%80%9A%E7%94%A8%E9%A1%9E%E5%88%A5%E4%BB%8B%E7%B4%B9/</url>
    <content><![CDATA[<h2 id="位置（Position）"><a href="#位置（Position）" class="headerlink" title="位置（Position）"></a>位置（Position）</h2><ul>
<li>定位值：<code>&lt;div class=&quot;position-sticky&quot;&gt;...&lt;/div&gt;</code></li>
<li>排列元素：格式為 {property}-{position}</li>
<li>property 為以下的其中一種:<ul>
<li>top - 用於垂直定位 top</li>
<li>start - 用於水平定位 left (LTR)</li>
<li>bottom - 用於垂直定位 bottom</li>
<li>end - 用於水平定位 right (LTR)</li>
</ul>
</li>
<li>position 為以下的其中一種:<ul>
<li>0 - 用於 0 的邊界定位</li>
<li>50 - 用於 50% 的邊界定位</li>
<li>100 - 用於 100% 的邊界定位<span id="more"></span>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary position-sticky top-0&quot;</span>&gt;</span></span><br><span class="line">  Mails <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary&quot;</span>&gt;</span>+99 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;visually-hidden&quot;</span>&gt;</span>unread messages<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-dark position-sticky top-0&quot;</span>&gt;</span></span><br><span class="line">  Marker <span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;1em&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1em&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 16 16&quot;</span> <span class="attr">class</span>=<span class="string">&quot;position-absolute top-100 start-50 translate-middle mt-1 bi bi-caret-down-fill&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#212529&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary position-sticky top-0&quot;</span>&gt;</span></span><br><span class="line">  Alerts <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;visually-hidden&quot;</span>&gt;</span>unread messages<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="溢出-Overflow-overflow-y-scroll"><a href="#溢出-Overflow-overflow-y-scroll" class="headerlink" title="溢出 (Overflow)overflow-y : scroll"></a>溢出 (Overflow)overflow-y : scroll</h2>]]></content>
      <categories>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 遠端數據庫</title>
    <url>/2021/04/29/github/Git-%E9%81%A0%E7%AB%AF%E6%95%B8%E6%93%9A%E5%BA%AB/</url>
    <content><![CDATA[<h2 id="遠端儲存庫-Repository-操作"><a href="#遠端儲存庫-Repository-操作" class="headerlink" title="遠端儲存庫(Repository)操作"></a>遠端儲存庫(Repository)操作</h2><p>我們可以在已經上傳的數據庫，再增加一個遠端存儲庫</p>
<p>步驟為：</p>
<blockquote>
<p>註冊 -&gt; git remote add 第二個數據庫名稱 遠端儲存庫網址 -&gt; 更新資料到遠端 master 分支：<code>git push -u 第二個數據庫名稱 master</code></p>
</blockquote>
<span id="more"></span>
<ul>
<li>註冊遠端儲存庫：<code>git remote add origin 遠端儲存庫網址</code></li>
<li>更新資料到遠端 master 分支：<code>git push -u origin master</code></li>
<li>u 是指他預設會推到哪個遠端數據庫服務</li>
<li>origin 可以改它的遠端數據庫名稱，例如 : <code>git push -u github master</code></li>
</ul>
<h2 id="Git-版本細節"><a href="#Git-版本細節" class="headerlink" title="Git 版本細節"></a>Git 版本細節</h2><ul>
<li>branch ：分支，預設分支叫做 master</li>
<li>HEAD：指標</li>
<li>origin：預設遠端儲存庫名稱</li>
<li>回頭觀看版本內容：git checkout 編號</li>
<li>返回最新的版本：git checkout master(分支名稱)</li>
</ul>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub 的金鑰匙</title>
    <url>/2021/04/28/github/GitHub-%E7%9A%84%E9%87%91%E9%91%B0%E5%8C%99/</url>
    <content><![CDATA[<h2 id="到底如何設定GitHub-的-SSH-呢？"><a href="#到底如何設定GitHub-的-SSH-呢？" class="headerlink" title="到底如何設定GitHub 的 SSH 呢？"></a>到底如何設定GitHub 的 SSH 呢？</h2><span id="more"></span>
<p>步驟一：<br>首先，要先用終端機移動到本機（也就是你這台電腦）的 .ssh上<br>例如：我終端機前面那行字為<code>yang@yangcongrendeMacBook-Air</code>，所以輸入<br><code>cd /Users/yang/.ssh</code>，移動到.ssh上。</p>
<p>步驟二：在<code>yang@yangcongrendeMacBook-Air .ssh</code>的位置上，再輸入<br><code>cat id_rsa.pub</code>這串指令，會跑出一段密碼。將這段密碼貼到gitHub的設定上面（最前面ssh-rsa不用貼）。<br>所以簡單來說，只要輸入兩行指令(yang是我的電腦名字，要自己改掉哦)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Users/yang/.ssh</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>commit 衝突</title>
    <url>/2021/05/04/github/commit-%E8%A1%9D%E7%AA%81/</url>
    <content><![CDATA[<h2 id="本地-commit-衝突"><a href="#本地-commit-衝突" class="headerlink" title="本地 commit 衝突"></a>本地 commit 衝突</h2><ol>
<li>原因：<blockquote>
<p>兩個 commit 在合併時，檔案裡的某一行有重複修改到時，就會觸發</p>
</blockquote>
</li>
<li>解決：<ul>
<li>因為分支修改到同一行的code，所以當 merge 時，會出現 commit 衝突。</li>
<li>解決完在工作目錄的 commit 衝突，需要再<code>git add .</code> <code>git commit -m &#39;merge&#39;</code>，才算完成。<span id="more"></span></li>
</ul>
</li>
</ol>
<h2 id="遠端-commit-衝突"><a href="#遠端-commit-衝突" class="headerlink" title="遠端 commit 衝突"></a>遠端 commit 衝突</h2><ul>
<li><p>故事理解：</p>
<blockquote>
<ol>
<li>A 跟 B 一起在同個 repo 開發，只有一條 master 線</li>
<li>A 先部署了一個 commit 到 master</li>
<li>B 更新了第六行程式碼，並在下班前立馬 push</li>
<li>A 也改了第六行，但他效率比較差，下班後 push 時才發現，B 這個ㄐ歪人先 push 了！</li>
<li>A 只好先 pull 下來，結果竟然跟自己的 commit 衝突</li>
<li>A 只好邊罵髒話，邊解決衝突，整理好後再 push</li>
</ol>
</blockquote>
</li>
<li><p>解決：<br>  因為 B 的檔案已在遠端上了，我們本地端的不是最新版的，因此我們要先輸入 <code>git pull</code> 把我們本地端檔案和遠端檔案合併，若有發生 遠端衝突時，要解決完成再<code>git add .</code> <code>git commit -m &#39;merge&#39;</code>，才算完成</p>
</li>
</ul>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>git 還原技巧</title>
    <url>/2021/04/29/github/git-%E9%82%84%E5%8E%9F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="還原技巧"><a href="#還原技巧" class="headerlink" title="還原技巧"></a>還原技巧</h2><p>新增檔案時</p>
<ol>
<li><p>檔案還沒加追蹤時（untracked），清空工作目錄</p>
<ul>
<li>顯示此次清除的檔案（預期要刪掉的檔案）：<code>git clean -n</code></li>
<li>強制清除檔案：<code>git clean -f</code></li>
</ul>
</li>
<li><p>檔案已加入追蹤，清空工作目錄</p>
<ul>
<li>還原工作目錄上已更改的檔案（已在commit過的檔案）：<code>git checkout -- files(你要還原的檔案)</code><span id="more"></span></li>
</ul>
</li>
<li><p>檔案加入到索引，退到工作目錄</p>
<ul>
<li>加入索引的檔案還原到工作目錄：<code>git reset HEAD</code></li>
</ul>
<p> <img src="reset.png" alt="檔案"></p>
</li>
<li><p>版本還原(reset)</p>
<ul>
<li>索引檔案&gt;還原到工作目錄：<code>git reset HEAD</code></li>
<li>還原前兩個版本：<code>git reset HEAD^^</code></li>
<li>還原前兩個版本，所有更新檔案都放棄：<code>git reset HEAD^^ --hard</code></li>
<li>還原到特定 commit：<code>git reset commit編號 --hard</code></li>
<li>git reset <a href="https://gitbook.tw/chapters/using-git/reset-commit.html">參數介紹</a></li>
<li>觀看詳細歷史紀錄：<code>git reflog</code><blockquote>
<p>可以使用<code>git reflog</code>查看已經被刪除的檔案 commit編號，再用<code>git reset commit編號 --hard</code>找回來</p>
</blockquote>
</li>
</ul>
</li>
<li><p>查看版本(checkout)</p>
<ul>
<li>回頭觀看版本內容：<code>git checkout 編號</code></li>
<li>返回最新的版本：<code>git checkout master(分支名稱)</code></li>
<li>還原工作目錄上已更改的檔案 ：<code>git checkout -- &lt;file&gt;</code></li>
</ul>
</li>
</ol>
<h2 id="checkout-與-reset-差異"><a href="#checkout-與-reset-差異" class="headerlink" title="checkout 與 reset 差異"></a>checkout 與 reset 差異</h2><pre><code>- checkout 是移動 HEAD
- reset 是移動 branch 及HEAD
</code></pre>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>gitHub flow 版控流程</title>
    <url>/2021/05/04/github/gitHub-flow-%E7%89%88%E6%8E%A7%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="常見合作流程"><a href="#常見合作流程" class="headerlink" title="常見合作流程"></a>常見合作流程</h2><ol>
<li><a href="https://nvie.com/posts/a-successful-git-branching-model/">git flow</a></li>
<li><a href="https://guides.github.com/introduction/flow/">gitHub flow</a></li>
<li>gitlab flow</li>
</ol>
<h2 id="gitHub-flow-流程"><a href="#gitHub-flow-流程" class="headerlink" title="gitHub flow 流程"></a>gitHub flow 流程</h2><pre><code>1. 在 master 建立分支來新增功能
2. 開始開發功能
3. 發 PR (Pull Request) 申請合併
4. 討論與檢視程式碼
5. 部署(Deploy)
6. 合併(Merge)
</code></pre>
<span id="more"></span>
<h2 id="gitHub-flow-規範"><a href="#gitHub-flow-規範" class="headerlink" title="gitHub flow 規範"></a>gitHub flow 規範</h2><ul>
<li>任何在 master 上的 commit 都是可以部署的</li>
<li>假使程式碼需要討論，請 PR 後在 comment 進行討論</li>
</ul>
<h2 id="協作流程"><a href="#協作流程" class="headerlink" title="協作流程"></a>協作流程</h2><ol>
<li>本地建立 node 、Git 環境，增加 (.gitignore)</li>
<li>commit 1：建立環境 <code>git commit -m &#39;建立環境&#39;</code></li>
<li>commit 2：修改 title <code>git commit -m &#39;修改 title&#39;</code></li>
<li>新增 dev branch。    <code>git branch dev</code>  在master時，先創立一個分支</li>
<li>新增 GitHub Repo，並 push    連接github</li>
<li>新增 heroku Repo，並 push.   連結heroku</li>
<li>B 抓 GitHub dev 分支，並開 feature 分支<br><code>git clone</code> <code>git branch feature</code> <code>git push origin feature</code>  </li>
<li>commit 兩個後，push feature 分支，並開 pr 請求合併 dev</li>
<li>管理員 A 合併</li>
<li>C 抓 GitHub dev 分支，並開 feature 分支</li>
<li>commit 兩個後，push feature 分支，並開 pr 請求合併 dev</li>
<li>管理員 A 合併，並抓下來看內容都 ok</li>
<li>管理員 A fetch 下來，用 master 合併 origin/dev 分支，並 push 到 GitHub<br>用git fetch把遠端資料全部桌下來</li>
</ol>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>什麼是 Git 呢？</title>
    <url>/2021/04/29/github/%E4%BB%80%E9%BA%BC%E6%98%AF-Git-%E5%91%A2%EF%BC%9F/</url>
    <content><![CDATA[<h2 id="為什麼要學-Git-？"><a href="#為什麼要學-Git-？" class="headerlink" title="為什麼要學 Git ？"></a>為什麼要學 Git ？</h2><ul>
<li>Git 是程式碼版本控制軟體</li>
<li>用網頁版型介紹 Git 的差異</li>
</ul>
<h2 id="Git-與-Github-是什麼？-差在哪呢？"><a href="#Git-與-Github-是什麼？-差在哪呢？" class="headerlink" title="Git 與 Github 是什麼？ 差在哪呢？"></a>Git 與 Github 是什麼？ 差在哪呢？</h2><ul>
<li><p>Git 是一個分散式版本控制軟體，可藉由它產生一個*儲存庫( git Repository)*。</p>
</li>
<li><p>Github：支援 git 程式碼存取和<em>遠端托管儲存庫</em>的平台服務</p>
</li>
<li><p>關係像是本地端有一個 index.html，但可以放到 dropbox、Google Drive 進行雲端託管</p>
<span id="more"></span>
<h2 id="熱門遠端儲存庫-Github-VS-Bitbucket-VS-Gitlab"><a href="#熱門遠端儲存庫-Github-VS-Bitbucket-VS-Gitlab" class="headerlink" title="熱門遠端儲存庫(Github VS Bitbucket VS Gitlab)"></a>熱門遠端儲存庫(Github VS Bitbucket VS Gitlab)</h2></li>
<li><p><a href="https://github.com/">GitHub</a>：擁有 GitHub Pages 功能，可擁有私人數據庫，免費方案是 3 人以下</p>
</li>
<li><p><a href="https://bitbucket.org/product/pricing">Bitbucket</a>：可擁有私人數據庫，免費方案是五人以下團隊</p>
</li>
<li><p><a href="https://about.gitlab.com/">GitLab</a>：自架 Git 伺服器，有提供 web 視覺化管理介面，常用於企業內部開發</p>
</li>
</ul>
<p>懶人包解釋：</p>
<ul>
<li>公司專案的小型團隊可用 Bitbucket</li>
<li>想要有一個公開對外網站的話，可用 GitHub</li>
</ul>
<p>我們可以在終端機上透過 git 指令來控制程式碼，也可以用圖形化介面的GuI來管理程式碼（SourceTree）。</p>
<h2 id="軟體與服務安裝"><a href="#軟體與服務安裝" class="headerlink" title="軟體與服務安裝"></a>軟體與服務安裝</h2><p>在學習版控前，可以將以下軟體進行安裝與註冊。</p>
<ul>
<li><a href="https://git-scm.com/">Git 軟體安裝</a> - 首頁 Download</li>
<li><a href="https://github.com/">Github 會員註冊</a></li>
<li><a href="https://www.sourcetreeapp.com/">SourceTree 軟體安裝</a></li>
</ul>
<h2 id="為什麼總是在git或是gitHub上使用得不順利呢？"><a href="#為什麼總是在git或是gitHub上使用得不順利呢？" class="headerlink" title="為什麼總是在git或是gitHub上使用得不順利呢？"></a>為什麼總是在git或是gitHub上使用得不順利呢？</h2><p>主要是因為我們不太熟悉指令，因為在使用上，有時還是需要透過指令，才能在操作時更加順利。<br>以下為常見的bash指令</p>
<p><img src="2021-04-27_1.28.38.png" alt="bash指令"></p>
<h2 id="嘗試-Git-是否有安裝成功"><a href="#嘗試-Git-是否有安裝成功" class="headerlink" title="嘗試 Git 是否有安裝成功"></a>嘗試 Git 是否有安裝成功</h2><p>在終端機裡面輸入：<code>git --version</code></p>
<h2 id="個人電腦環境設定"><a href="#個人電腦環境設定" class="headerlink" title="個人電腦環境設定"></a>個人電腦環境設定</h2><p>設定個人資料</p>
<ul>
<li>輸入姓名：<code>git config --global user.name &quot;mike&quot;</code></li>
<li>輸入個人的 email：<code>git config --global user.email &quot;q2336xxx@gmail.com&quot;</code></li>
<li>查詢 git 設定內容：<code>git config --list</code></li>
</ul>
<h2 id="基本指令架構"><a href="#基本指令架構" class="headerlink" title="基本指令架構"></a>基本指令架構</h2><p><img src="image1.jpg" alt="指令架構"></p>
<h2 id="Git-常用指令"><a href="#Git-常用指令" class="headerlink" title="Git 常用指令"></a>Git 常用指令</h2><ul>
<li>初始化數據庫： <code>git init</code></li>
<li><a href="https://helpx.adobe.com/tw/x-productkb/global/show-hidden-files-folders-extensions.html">開啟 .git 隱藏檔方案</a><ul>
<li>Mac<ul>
<li>command+shift+.</li>
</ul>
</li>
</ul>
</li>
<li>查詢當前狀態：<code>git status</code><ul>
<li>要將檔案加入到指定資料夾</li>
</ul>
</li>
<li>將檔案加入到索引：<code>git add .</code></li>
<li>將索引檔案變成一個更新(commit)：<code>git commit -m &quot;新增網頁環境&quot;</code></li>
<li>觀察 commit 歷史紀錄： <code>git log</code></li>
<li>下載遠端數據庫： <code>git clone 數據庫網址</code></li>
<li>更新遠端數據庫： <code>git push origin master</code></li>
</ul>
<h2 id="GitHub-基本上傳步驟"><a href="#GitHub-基本上傳步驟" class="headerlink" title="GitHub 基本上傳步驟"></a>GitHub 基本上傳步驟</h2><ol>
<li><p>在本地端建立資料夾</p>
</li>
<li><p>自資料夾上先建立初始化數據庫： <code>git init</code></p>
</li>
<li><p>將檔案加入到索引<code>git add .</code></p>
</li>
<li><p>將索引檔案變成一個更新(commit)：<code>git commit -m &quot;新增網頁環境&quot;</code></p>
</li>
<li><p>在gitHub 上建立一個遠端數據庫 new repositories</p>
</li>
<li><p>選擇第二點，因為我們已經在本地端建立好數據庫了，因此，將遠端數據庫的連結跟本地端做連結。 <code>git remote add origin git@github.com:/Github.git</code></p>
</li>
<li><p>回到 gitHub 上，去 setting 裡，開啟 gitHub Pages 頁面。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>搞懂 Git 分支五四三！</title>
    <url>/2021/04/30/github/%E6%90%9E%E6%87%82-Git-%E5%88%86%E6%94%AF%E4%BA%94%E5%9B%9B%E4%B8%89%EF%BC%81/</url>
    <content><![CDATA[<h2 id="Git-分支-branch"><a href="#Git-分支-branch" class="headerlink" title="Git 分支(branch)"></a>Git 分支(branch)</h2><p>搭配 <a href="https://learngitbranching.js.org/?locale=zh_TW">Learn Git Branching</a>。</p>
<p>在一開始接觸 git branch，總會疑問著，分支是什麼，可以運用在什麼地方？</p>
<ul>
<li>多人協作時，不可能都在 master</li>
<li>可以讓 master 都是正式版資料，可以開分支來做測試或開發，藉此不影響正式主機分支<span id="more"></span></li>
</ul>
<h2 id="試著想像～"><a href="#試著想像～" class="headerlink" title="試著想像～"></a>試著想像～</h2><ul>
<li>分支就像是便利貼，貼在某個 commit 上</li>
<li>分支合併，主要是兩個 commit 進行合併</li>
</ul>
<h2 id="結論～開分支流程"><a href="#結論～開分支流程" class="headerlink" title="結論～開分支流程"></a>結論～開分支流程</h2><ol>
<li><p>新增分支：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch 分支名稱</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>查看分支：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>切換分支：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout 分支名稱</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>刪除分支：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d 分支名稱</span><br></pre></td></tr></table></figure>
</code></pre>
<p> -D 是強制刪除</p>
</li>
<li><p>還原上個版本：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset HEAD^</span><br></pre></td></tr></table></figure>
</code></pre>
<p> 開發情境：我有一個正式主機 master 分支，有一個開發分支叫做 develop</p>
</li>
</ol>
<h2 id="合併分支-amp-amp-快轉機制"><a href="#合併分支-amp-amp-快轉機制" class="headerlink" title="合併分支 &amp;&amp; 快轉機制"></a>合併分支 &amp;&amp; 快轉機制</h2><ol>
<li><p>合併分支：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git merge 分支名稱</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>取消快轉：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git merge 分支名稱 --no-ff</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>觀看線圖：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> —oneline -graph</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>還原合併前狀態：</p>
<pre><code> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset —hard ORIG_HEAD</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
</ol>
<h2 id="快轉機制"><a href="#快轉機制" class="headerlink" title="快轉機制"></a>快轉機制</h2><ul>
<li>取消快轉：兩個不同任務分支合併時，取消快轉</li>
<li>預設使用快轉：本地與遠端兩條相同的任務分支時，可以用快轉</li>
</ul>
<blockquote>
<p>判斷機制：</p>
</blockquote>
<pre><code>1. 當 master 或 其他分支 其中一個還在源頭時，要使用取消快轉`git merge 分支名稱 --no-ff`

2. 反之，當 master 或其他分支已經不在源頭時（都有commit過），就可以直接使用快轉`git merge 分支名稱`
</code></pre>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>發 PR 流程</title>
    <url>/2021/05/04/github/%E7%99%BC-PR-%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="GitHub-pull-request-請求流程"><a href="#GitHub-pull-request-請求流程" class="headerlink" title="GitHub pull request(請求流程)"></a>GitHub pull request(請求流程)</h2><blockquote>
<p>找到專案 -&gt; fork 專案到自己 gitHub 上 -&gt; 把檔案 git clone 到自己桌面 -&gt; 開啟新分支<code>git branch feature</code> -&gt; commit 自己資料 -&gt; <code>git push origin feature</code>到遠端 -&gt; 點擊 pull request -&gt; New pull request -&gt;確認是將feature分支 pr 到專案的 dev -&gt; 若沒有跳出 merge conflict -&gt; scuuess</p>
</blockquote>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 的開發流程紀錄</title>
    <url>/2021/04/28/javascript/JavaScript-%E7%9A%84%E9%96%8B%E7%99%BC%E6%B5%81%E7%A8%8B%E7%B4%80%E9%8C%84/</url>
    <content><![CDATA[<h2 id="待辦事項"><a href="#待辦事項" class="headerlink" title="待辦事項"></a>待辦事項</h2><p><a href="https://xd.adobe.com/view/a48b8617-4588-4817-9062-b62130dce916-f1d8/">設計稿</a></p>
<span id="more"></span>
<ol>
<li><p>環境建立</p>
<ul>
<li>建立基本環境</li>
<li>拉完成的設計稿到自己的桌面</li>
<li>稍微觀看的 CSS 結構</li>
<li>調整 js 結構</li>
<li>API config 設定確認<ul>
<li>將私密帳號密碼放在 config</li>
</ul>
</li>
</ul>
</li>
<li><p>前台開發</p>
<ul>
<li>產品 get API 設計</li>
<li>下拉選單（cheange 事件），在顯示畫面<ul>
<li>重構下拉選單與 get API 設計</li>
</ul>
</li>
<li>購物車 API 設計</li>
<li>產生訂單 API 設計</li>
</ul>
</li>
<li><p>後台開發</p>
<ul>
<li>下面的訂單列表</li>
<li>上面的 C3 圖表</li>
</ul>
</li>
<li><p>優化細節</p>
<ul>
<li>千分位設計</li>
<li>使用者體驗</li>
<li>validation 優化</li>
<li>C3.js 優化</li>
</ul>
</li>
</ol>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><blockquote>
<p>先開發到客戶滿意程度，在私下重構、優化（錯誤回饋、UI 優化）⇒ 效能優化<br>零產出，比較容易做的功能先做一做<br>小步測試 ⇒ 寫開發 code ⇒ 小步測試 ⇒ 寫開發 code ⇒ 小小重構<br>tdd 測試，先寫測試 code，在寫產品 code<br>把成果文字化，寫成自己筆記</p>
</blockquote>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>函式設計之術</title>
    <url>/2021/06/19/javascript/%E5%87%BD%E5%BC%8F%E8%A8%AD%E8%A8%88%E4%B9%8B%E8%A1%93/</url>
    <content><![CDATA[<h2 id="函式（function）"><a href="#函式（function）" class="headerlink" title="函式（function）"></a>函式（function）</h2><h3 id="函式裡面仍可以執行函式"><a href="#函式裡面仍可以執行函式" class="headerlink" title="函式裡面仍可以執行函式"></a>函式裡面仍可以執行函式</h3><ul>
<li>函式內部也可以呼叫其他函式，好處是可以重複利用程式碼、簡潔版面<span id="more"></span>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">morningAction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;wake up&#x27;</span>);</span><br><span class="line">  washHead();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;go outside&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nightAction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;come home&#x27;</span>);</span><br><span class="line">  washHead();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;go to sleep&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">washHead</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;wash teeth&#x27;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;wash face&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">morningAction();</span><br><span class="line">nightAction();</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="函式參數"><a href="#函式參數" class="headerlink" title="函式參數()"></a>函式參數()</h3><ul>
<li>函式可以帶入自定義的參數 (在此為 num1, num2)，並在呼叫函式的時候傳入。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callNum</span>(<span class="params">num1, num2</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> total = num1 + num2;</span><br><span class="line">    <span class="built_in">console</span>.log(total);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// num1 等於 1, num2 等於 2</span></span><br><span class="line">callNum(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">// num1 等於 2, num2 等於 4</span></span><br><span class="line">callNum(<span class="number">2</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>參數只存活在大括號。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callNum</span>(<span class="params">num</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 在此可以成功呼叫 num</span></span><br><span class="line">    <span class="built_in">console</span>.log(num);</span><br><span class="line">&#125;</span><br><span class="line">callNum(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 函數外部不可以呼叫 num，這行會報錯</span></span><br><span class="line"><span class="built_in">console</span>.log(num);</span><br></pre></td></tr></table></figure>

<ul>
<li>延伸筆記，較為進階內容<br><a href="https://ithelp.ithome.com.tw/articles/10192368">kuro筆記</a><br><a href="https://pjchender.blogspot.com/2016/04/javascriptparameterargumentsspread.html">arguments</a></li>
</ul>
<h3 id="函式的-return-觀念"><a href="#函式的-return-觀念" class="headerlink" title="函式的 return 觀念"></a>函式的 return 觀念</h3><ul>
<li>把函式內得到的值回傳到函式外面去</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calcTotal</span>(<span class="params">chineseScore,mathScore</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> chineseScore + mathScore;</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">//回傳結果到外層</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bobTotal = calcTotal(<span class="number">60</span>,<span class="number">70</span>);</span><br><span class="line">   <span class="comment">// 變數賦予 此結果</span></span><br><span class="line"><span class="built_in">console</span>.log(bobTotal);</span><br></pre></td></tr></table></figure>

<h3 id="function-宣告變數"><a href="#function-宣告變數" class="headerlink" title="function 宣告變數"></a>function 宣告變數</h3><ul>
<li>函式可以用 return 回傳一個值，並可以將該值賦予給其他變數。</li>
<li>函式內宣告的變數只能活在函式內，所以不能在外層使用，但值可以透過 return 回傳出去</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calcTotal</span>(<span class="params">chineseScore,mathScore</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> totalScore = chineseScore + mathScore;</span><br><span class="line">  <span class="keyword">return</span> totalScore;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(totalScore);-------&gt;錯誤（因為total只能存在<span class="function"><span class="keyword">function</span>裡）</span></span><br><span class="line"><span class="function">// <span class="title">Uncaught</span> <span class="title">ReferenceError</span>: <span class="title">totalScore</span> <span class="title">is</span> <span class="title">not</span> <span class="title">defined</span></span></span><br><span class="line"><span class="function"><span class="title">let</span> <span class="title">tomTotal</span> = <span class="title">calcTotal</span>(<span class="params"><span class="number">80</span>,<span class="number">100</span></span>)</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>return 可以中斷涵式執行，後面程式就不跑了</p>
</blockquote>
<h3 id="return-會中斷函式執行，可以有多個-return、搭配-if-else-做使用"><a href="#return-會中斷函式執行，可以有多個-return、搭配-if-else-做使用" class="headerlink" title="return 會中斷函式執行，可以有多個 return、搭配 if else 做使用"></a>return 會中斷函式執行，可以有多個 return、搭配 if else 做使用</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">good</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> bmi = good;</span><br><span class="line">  <span class="keyword">if</span> (bmi&gt;<span class="number">10</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;你好&#x27;</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;笨蛋&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> tellEveryOne = sayHi(<span class="number">12</span>) + sayHi(<span class="number">8</span>);</span><br><span class="line"><span class="built_in">console</span>.log(tellEveryOne);</span><br></pre></td></tr></table></figure>

<h3 id="有-return-和-無-return-差異？"><a href="#有-return-和-無-return-差異？" class="headerlink" title="有 return 和 無 return 差異？"></a>有 return 和 無 return 差異？</h3><ul>
<li>沒有<br><img src="fn01.png" alt="沒有"></li>
<li>有<br><img src="fn02.png" alt="有"></li>
</ul>
<h2 id="％-餘數判斷取得值"><a href="#％-餘數判斷取得值" class="headerlink" title="％ 餘數判斷取得值"></a>％ 餘數判斷取得值</h2><ul>
<li><p>使用 % 來取得餘數</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>%<span class="number">2</span> <span class="comment">//1</span></span><br><span class="line"><span class="number">4</span>%<span class="number">2</span> <span class="comment">//0</span></span><br><span class="line"><span class="number">9</span>%<span class="number">2</span> <span class="comment">//1</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="BMI解析-使用關注點分離"><a href="#BMI解析-使用關注點分離" class="headerlink" title="BMI解析-使用關注點分離"></a>BMI解析-使用關注點分離</h2><blockquote>
<p>公式：BMI值計算公式: BMI = 體重(公斤) / 身高2(公尺2)</p>
</blockquote>
<ol>
<li>先計算BMI值為多少？</li>
<li>比較BMI大小</li>
<li>printState的function（畫面）</li>
<li>addData的function（計算），建立空物件，把值推到 bmiHistoryData</li>
<li>showHistoryData的function ，顯示總紀錄的畫面</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 一. 變數</span></span><br><span class="line"><span class="keyword">let</span> bmiHistoryData = [];</span><br><span class="line"><span class="keyword">const</span> bmiData = &#123;</span><br><span class="line">    <span class="string">&#x27;overthin&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;過輕&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;藍色&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;normal&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;正常&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;紅色&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;overweight&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;過重&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;澄色&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;lightfat&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;輕度肥胖&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;黃色&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;midfat&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;中度肥胖&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;黑色&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;heavyfat&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;重度肥胖&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;綠色&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 二. 計算</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addData</span> (<span class="params">bmi, state</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line">    obj.bmi = bmi;</span><br><span class="line">    obj.state = state;</span><br><span class="line">    bmiHistoryData.push(obj);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">printBmi</span>(<span class="params">height, weight</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> bmi = (weight /((height/<span class="number">100</span>) **<span class="number">2</span>)).toFixed(<span class="number">2</span>);</span><br><span class="line">    <span class="comment">// return bmi;</span></span><br><span class="line">    <span class="keyword">if</span>(bmi &lt; <span class="number">18.5</span>)&#123;</span><br><span class="line">        printState(<span class="string">&#x27;overthin&#x27;</span>);</span><br><span class="line">        addData(bmi, <span class="string">&#x27;overthin&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bmi &gt;= <span class="number">18.5</span> &amp;&amp; bmi &lt; <span class="number">24</span>)&#123;</span><br><span class="line">        printState(<span class="string">&#x27;normal&#x27;</span>);</span><br><span class="line">        addData(bmi, <span class="string">&#x27;normal&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bmi &gt;= <span class="number">24</span> &amp;&amp; bmi &lt; <span class="number">27</span>)&#123;</span><br><span class="line">        printState(<span class="string">&#x27;overweight&#x27;</span>);</span><br><span class="line">        addData(bmi, <span class="string">&#x27;overweight&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bmi &gt;= <span class="number">27</span> &amp;&amp; bmi &lt; <span class="number">30</span>)&#123;</span><br><span class="line">        printState(<span class="string">&#x27;lightfat&#x27;</span>);</span><br><span class="line">        addData(bmi, <span class="string">&#x27;lightfat&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bmi &gt;= <span class="number">30</span> &amp;&amp; bmi &lt; <span class="number">35</span>)&#123;</span><br><span class="line">        printState(<span class="string">&#x27;midfat&#x27;</span>);</span><br><span class="line">        addData(bmi, <span class="string">&#x27;midfat&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bmi &gt;= <span class="number">35</span>)&#123;</span><br><span class="line">        printState(<span class="string">&#x27;heavyfat&#x27;</span>);</span><br><span class="line">        addData(bmi, <span class="string">&#x27;heavyfat&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;您的數值輸入錯誤，請重新輸入&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 三. 畫面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">printState</span>(<span class="params">state</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`您的體重<span class="subst">$&#123;bmiData[state].state&#125;</span>，健康指數為<span class="subst">$&#123;bmiData[state].color&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showHistoryData</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`您總共計算 <span class="subst">$&#123;bmiHistoryData.length&#125;</span> 次 BMI 紀錄，最後一次 BMI 指數為 <span class="subst">$&#123;bmiHistoryData[bmiHistoryData.length-<span class="number">1</span>].bmi&#125;</span>，體重<span class="subst">$&#123;bmiData[bmiHistoryData[bmiHistoryData.length-<span class="number">1</span>].state].state&#125;</span>！健康指數為<span class="subst">$&#123;bmiData[bmiHistoryData[bmiHistoryData.length-<span class="number">1</span>].state].color&#125;</span>！`</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="用Math-random-取得亂數的技巧"><a href="#用Math-random-取得亂數的技巧" class="headerlink" title="用Math.random()取得亂數的技巧"></a><a href="https://ithelp.ithome.com.tw/articles/10197904">用Math.random()取得亂數的技巧</a></h2><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandom</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*x);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>常用 Js函式庫</title>
    <url>/2021/04/19/javascript/%E5%B8%B8%E7%94%A8-Js%E5%87%BD%E5%BC%8F%E5%BA%AB/</url>
    <content><![CDATA[<h2 id="函式庫整理"><a href="#函式庫整理" class="headerlink" title="函式庫整理"></a>函式庫整理</h2><h3 id="千分位"><a href="#千分位" class="headerlink" title="千分位"></a>千分位</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toThousands</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> parts = x.toString().split(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">  parts[<span class="number">0</span>] = parts[<span class="number">0</span>].replace(<span class="regexp">/\B(?=(\d&#123;3&#125;)+(?!\d))/g</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> parts.join(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="手機驗證"><a href="#手機驗證" class="headerlink" title="手機驗證"></a>手機驗證</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">phoneIsValid</span> (<span class="params">phone</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="regexp">/^[09]&#123;2&#125;\d&#123;8&#125;$/</span>.test(phone))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="信箱驗證-email"><a href="#信箱驗證-email" class="headerlink" title="信箱驗證(email)"></a>信箱驗證(email)</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">emailIsValid</span> (<span class="params">email</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="regexp">/^[^\s@]+@[^\s@]+\.[^\s@]+$/</span>.test(email))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="排列順序"><a href="#排列順序" class="headerlink" title="排列順序"></a>排列順序</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sort</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">  item.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> b[<span class="number">1</span>] - a[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sort</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">  item.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span> b - a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>物件跟陣列資料處理之術</title>
    <url>/2021/06/18/javascript/%E7%89%A9%E4%BB%B6%E8%B7%9F%E9%99%A3%E5%88%97%E8%B3%87%E6%96%99%E8%99%95%E7%90%86%E4%B9%8B%E8%A1%93/</url>
    <content><![CDATA[<h2 id="陣列與物件使用時機"><a href="#陣列與物件使用時機" class="headerlink" title="陣列與物件使用時機"></a>陣列與物件使用時機</h2><ul>
<li>陣列使用時機：當資料需要使用大量且同性質的資料</li>
<li>物件使用時機：要描述一個東西對應的特徵和行為。</li>
</ul>
<blockquote>
<p>在做資料整理時，一樣把握一個原則：資料要先定義初始化</p>
</blockquote>
<h2 id="陣列"><a href="#陣列" class="headerlink" title="陣列"></a>陣列</h2><blockquote>
<p>學習重點：</p>
</blockquote>
<ul>
<li><p>基本設定：讀取陣列、抓取長度(length)</p>
</li>
<li><p>陣列方法：push、unshift、pop、slice、splice</p>
</li>
<li><p>進階陣列運用：filter、map、forEach …</p>
<span id="more"></span>
<h3 id="陣列基本設定"><a href="#陣列基本設定" class="headerlink" title="陣列基本設定"></a>陣列基本設定</h3></li>
<li><p>這是一串陣列</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = [<span class="string">&quot;red&quot;</span>,<span class="string">&quot;black&quot;</span>,<span class="string">&quot;pink&quot;</span>];</span><br></pre></td></tr></table></figure></li>
<li><p>讀取陣列</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> liaoLikeColor = colors[<span class="number">2</span>];</span><br><span class="line"><span class="comment">// liaoLikeColor ＝ pink</span></span><br></pre></td></tr></table></figure></li>
<li><p>抓取長度(length)</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = [<span class="string">&quot;red&quot;</span>,<span class="string">&quot;black&quot;</span>,<span class="string">&quot;pink&quot;</span>];</span><br><span class="line"><span class="keyword">let</span> colorsLength = colors.length;</span><br><span class="line"><span class="comment">// colorsLength = 3</span></span><br></pre></td></tr></table></figure></li>
<li><p>寫入陣列（將資料依照位置寫入空陣列裡）</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = [];</span><br><span class="line"><span class="comment">// 寫入</span></span><br><span class="line">colors[<span class="number">0</span>] = <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line">colors[<span class="number">2</span>] = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line">colors[<span class="number">4</span>] = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(colors);</span><br><span class="line"><span class="comment">// colors[3] 會是undefined</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="陣列方法運用"><a href="#陣列方法運用" class="headerlink" title="陣列方法運用"></a>陣列方法運用</h3><ul>
<li><p>push寫入資料（在最後面做增加）</p>
<blockquote>
<p>可以單筆 or 多筆寫入</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = [<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;red&#x27;</span>];</span><br><span class="line">colors.push(<span class="string">&#x27;black&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>,<span class="string">&#x27;orange&#x27;</span>)</span><br><span class="line"><span class="comment">// colors = [&#x27;blue&#x27;,&#x27;red&#x27;,&#x27;black&#x27;,&#x27;pink&#x27;,&#x27;orange&#x27;];</span></span><br></pre></td></tr></table></figure></li>
<li><p>unshift寫入資料（在最前面做增加）</p>
<blockquote>
<p>可以單筆 or 多筆寫入</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = [<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;red&#x27;</span>];</span><br><span class="line">colors.unshift(<span class="string">&#x27;black&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>,<span class="string">&#x27;orange&#x27;</span>)</span><br><span class="line"><span class="comment">// colors = [&#x27;black&#x27;,&#x27;pink&#x27;,&#x27;orange&#x27;,&#x27;blue&#x27;,&#x27;red&#x27;];</span></span><br></pre></td></tr></table></figure></li>
<li><p>pop刪除資料（刪除最後一筆）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = [<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;red&#x27;</span>];</span><br><span class="line">colors.pop();</span><br><span class="line"><span class="comment">// blue </span></span><br></pre></td></tr></table></figure></li>
<li><p>shift刪除資料（刪除最前面一筆）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = [<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;red&#x27;</span>];</span><br><span class="line">colors.shift();</span><br><span class="line"><span class="comment">// red </span></span><br></pre></td></tr></table></figure></li>
<li><p>splice刪除資料（刪除指定資料）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = [<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;yelllow&#x27;</span>];</span><br><span class="line">colors.splice(<span class="number">1</span>,<span class="number">1</span>);<span class="comment">//[&#x27;blue&#x27;,&#x27;yellow&#x27;]</span></span><br><span class="line">          <span class="comment">//起始位置 ,要往後刪除幾筆資料（包括自己）</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="進階陣列運用"><a href="#進階陣列運用" class="headerlink" title="進階陣列運用"></a>進階陣列運用</h3><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><ul>
<li><p>filter() 是 JavaScript 的一個陣列處理方法，用於篩選出指定元素，並回傳一個陣列。filter() 不會修改原來的陣列，而是會產生一個新的陣列，並且可以指派給其他變數。</p>
</li>
<li><p>語法如下：</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [];</span><br><span class="line"><span class="comment">//回傳一個新的陣列，並指派給變數</span></span><br><span class="line"><span class="keyword">let</span> newArr = arr.filter();</span><br></pre></td></tr></table></figure>

<ul>
<li><p>以下為 filter() 的用法：</p>
<blockquote>
<p>filter() 內需放入一個函式，並回傳一個值。filter() 會一一將陣列中的每個元素帶入函式測試，如果函式的回傳值為 true，則會將當前的元素保留至新陣列中，若為 false 則不保留。</p>
</blockquote>
</li>
<li><p>callback 函式常見會帶有三種參數，範例如下:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> food = [</span><br><span class="line">  &#123;</span><br><span class="line">    foodName: <span class="string">&#x27;鍋燒意麵&#x27;</span>,</span><br><span class="line">    price: <span class="number">70</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    foodName: <span class="string">&#x27;炒麵&#x27;</span>,</span><br><span class="line">    price: <span class="number">65</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    foodName: <span class="string">&#x27;蘿蔔泥&#x27;</span>,</span><br><span class="line">    price: <span class="number">20</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    foodName: <span class="string">&#x27;荷包蛋&#x27;</span>,</span><br><span class="line">    price: <span class="number">10</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// item: 目前正在處理的元素。</span></span><br><span class="line"><span class="comment">// index: 目前正在處理的元素之索引</span></span><br><span class="line"><span class="comment">// array: 呼叫 filter 的原始陣列，在此為 food。此參數較為少用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> target = food.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, array</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 回傳值，如果為 true，則將正在處理的這個 item 加入新陣列</span></span><br><span class="line">    <span class="keyword">return</span> item.price &gt;= <span class="number">20</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(target);</span><br><span class="line"><span class="built_in">console</span>.log(food);</span><br></pre></td></tr></table></figure>

<ul>
<li>Chrome 的輸出結果<img src="object01.png" alt="Chrome 的輸出結果"></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><ul>
<li>map() 與 filter() 有許多共通點，以下</li>
</ul>
<blockquote>
<p>皆為 JavaScript 的陣列方法。都不會影響到原來的陣列，而是會回傳一個新的陣列。都是透過 callback 函式來處理陣列中的元素，函式參數可帶入「目前正在處理的元素」、「正在處理的元素索引」、「原始陣列」。</p>
</blockquote>
<ul>
<li>而它們最大的差異在於，以下</li>
</ul>
<blockquote>
<p>filter() 產生的新陣列只會包含「符合回傳條件」的元素，map() 則是會包含「運算後」的所有元素。</p>
</blockquote>
<ul>
<li><p>舉例來說：</p>
<ul>
<li>filter()</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> newa = a.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item &gt; <span class="number">1</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newa);</span><br><span class="line"><span class="comment">// newa = [2,3,4];</span></span><br></pre></td></tr></table></figure>

<ul>
<li>map()</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> newa = a.map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item &gt; <span class="number">1</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newa);</span><br><span class="line"><span class="comment">// false true true true </span></span><br></pre></td></tr></table></figure>

<ul>
<li>得出的結論：<ul>
<li>可看出 filter() 陣列回傳的是 「判斷為 true 的元素」，map() 陣列回傳的是 「元素的運算結果」。</li>
</ul>
</li>
<li><strong>注意，map() 一定會替原始陣列的每個元素回傳一個值，如果不回傳則為 undefined</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">mapEmpty = a.map(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, array</span>)</span>&#123;</span><br><span class="line">    <span class="comment">/*假設不設定回傳*/</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(mapEmpty);</span><br><span class="line"><span class="comment">// undefined undefined undefined undefined</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h4><ul>
<li>forEach() 是屬於 「陣列」 的方法，會將陣列內的每個元素一一傳入，並執行給定的函式一次。 forEach() 內的函式常見會帶有三個參數</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 參數 item 代表陣列中目前正在被處理的那個元素</span></span><br><span class="line"><span class="comment">// 參數 index 代表陣列中目前正在被處理的那個元素的索引值</span></span><br><span class="line"><span class="comment">// 參數 array 代表被處理的陣列本身，在此為 data</span></span><br><span class="line">data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, array</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item, index, array);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// &#x27;a&#x27;,0,[&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;]</span></span><br><span class="line"><span class="comment">// &#x27;b&#x27;,1,[&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;]</span></span><br><span class="line"><span class="comment">// &#x27;c&#x27;,2,[&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;]</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>這邊需要特別提醒，在 forEach() 函式內用 return 是無效的。除非程式碼有誤，否則並沒有中止 forEach() 的辦法</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>];</span><br><span class="line"><span class="comment">// </span></span><br><span class="line">data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, array</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item, index, array);</span><br><span class="line">    <span class="comment">// 程式碼會忽略這個 return</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>幾筆資料，就會跑幾次</li>
<li>只有陣列可用（物件不行）</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [<span class="number">10</span>, <span class="number">20</span>];</span><br><span class="line">data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, array</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item,index,array);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 3 10 0 (2) [10, 20]</span></span><br><span class="line"><span class="comment">// 3 20 1 (2) [10, 20]</span></span><br></pre></td></tr></table></figure>

<h4 id="forEach案例"><a href="#forEach案例" class="headerlink" title="forEach案例"></a>forEach案例</h4><ol>
<li><p>篩選出陣列裡面有幾個偶數?</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 篩選出陣列裡面有幾個偶數</span></span><br><span class="line"><span class="comment">// 搭配 if</span></span><br><span class="line"><span class="keyword">let</span> data = [<span class="number">10</span>,<span class="number">11</span>,<span class="number">45</span>,<span class="number">66</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">44</span>,<span class="number">34</span>,<span class="number">20</span>,<span class="number">35</span>,<span class="number">79</span>,<span class="number">63</span>,<span class="number">9</span>];</span><br><span class="line"><span class="keyword">let</span> newData = []; <span class="comment">//放入新陣列</span></span><br><span class="line"><span class="keyword">let</span> total = <span class="number">0</span>; <span class="comment">//計算有幾筆？</span></span><br><span class="line">data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(item % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        newData.push(item);</span><br><span class="line">        total +=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newData);</span><br><span class="line"><span class="built_in">console</span>.log(total);</span><br></pre></td></tr></table></figure></li>
<li><p>男女人數計算機-透過物件整合資料</p>
<ul>
<li>懂得整合資料、處理資料（端看要處理的資料，決定資料內容形式為 0 、[]、{} ）</li>
</ul>
</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;allen&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;male&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;mike&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;male&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;lucy&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;female&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;jenny&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;female&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;lily&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;female&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 使用物件管理資料</span></span><br><span class="line"><span class="keyword">let</span> peopleInSchool = &#123;</span><br><span class="line">    male: <span class="number">0</span>,</span><br><span class="line">    female: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(item.sex == female);</span></span><br><span class="line">    <span class="keyword">if</span>(item.sex == <span class="string">&#x27;female&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;是女生&#x27;);</span></span><br><span class="line">        peopleInSchool.female +=<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;是男生&#x27;);</span></span><br><span class="line">        peopleInSchool.male +=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(peopleInSchool);</span><br></pre></td></tr></table></figure>

<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">//取出物件資料</span></span><br><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;allen&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;male&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;mike&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;male&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;lucy&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;female&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;jenny&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;female&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: <span class="string">&#x27;lily&#x27;</span>,</span><br><span class="line">        sex: <span class="string">&#x27;female&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 使用物件管理資料</span></span><br><span class="line"><span class="keyword">let</span> peopleInSchool = &#123;</span><br><span class="line">    male: [],</span><br><span class="line">    female: []</span><br><span class="line">&#125;</span><br><span class="line">data.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(item.sex == female);</span></span><br><span class="line">    <span class="keyword">if</span>(item.sex == <span class="string">&#x27;female&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;是女生&#x27;);</span></span><br><span class="line">        peopleInSchool.female.push(item);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;是男生&#x27;);</span></span><br><span class="line">        peopleInSchool.male.push(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(peopleInSchool);</span><br></pre></td></tr></table></figure>

<h2 id="物件"><a href="#物件" class="headerlink" title="物件"></a>物件</h2><blockquote>
<p>學習重點：</p>
</blockquote>
<ul>
<li>如何讀取物件的值</li>
<li>新增、修改方式</li>
</ul>
<h3 id="讀取物件的值"><a href="#讀取物件的值" class="headerlink" title="讀取物件的值"></a>讀取物件的值</h3><ul>
<li><p>方法一：homes.dog</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> homes = &#123;</span><br><span class="line">  owner:<span class="string">&#x27;bob&#x27;</span>,</span><br><span class="line">  dogs: <span class="string">&#x27;come&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> bobdog = homes.dogs</span><br></pre></td></tr></table></figure></li>
<li><p>方法二：homes[‘dogs’]、homes[round2]</p>
<ul>
<li>當「某個變數的值」跟「屬性名稱」相同時，可直接以該變數取得同樣名稱的屬性 value，外層不用再多包覆單、雙引號來做存取</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> homes = &#123;</span><br><span class="line">  owner:<span class="string">&#x27;bob&#x27;</span>,</span><br><span class="line">  dogs: <span class="string">&#x27;come&#x27;</span></span><br><span class="line">&#125;                  <span class="comment">// [放入字串]</span></span><br><span class="line"><span class="keyword">let</span> bobdog = homes[<span class="string">&#x27;dogs&#x27;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(bobdog);</span><br><span class="line">                  <span class="comment">// 賦值到變數上，再使用物件取值</span></span><br><span class="line"><span class="keyword">let</span> round2 = <span class="string">&#x27;dogs&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(homes[round2]);</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="新增物件屬性與值"><a href="#新增物件屬性與值" class="headerlink" title="新增物件屬性與值"></a>新增物件屬性與值</h3>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> homes = &#123;&#125;;</span><br><span class="line">homes.owner = <span class="string">&#x27;bob&#x27;</span>;</span><br><span class="line">homes.dogs = <span class="string">&#x27;come&#x27;</span>;</span><br><span class="line">      <span class="comment">//  = 表示 『賦予』</span></span><br></pre></td></tr></table></figure>

<h3 id="修改物件屬性的值"><a href="#修改物件屬性的值" class="headerlink" title="修改物件屬性的值"></a>修改物件屬性的值</h3>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> homes = &#123;</span><br><span class="line">  owner = <span class="string">&#x27;bob&#x27;</span>,</span><br><span class="line">  dogs = <span class="string">&#x27;come&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">homes.owner = <span class="string">&#x27;lily&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="delete-刪除物件屬性與值"><a href="#delete-刪除物件屬性與值" class="headerlink" title="delete 刪除物件屬性與值"></a>delete 刪除物件屬性與值</h3>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> homes = &#123;</span><br><span class="line">  mom: <span class="string">&#x27;lily&#x27;</span>,</span><br><span class="line">  dad: <span class="string">&#x27;bob&#x27;</span>,</span><br><span class="line">  dogs: <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span> homes.mom;</span><br><span class="line"><span class="built_in">console</span>.log(homes);</span><br></pre></td></tr></table></figure>

<ul>
<li>物件包物件寫法可以把資料做有效的分類</li>
</ul>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>邏輯判斷之術</title>
    <url>/2021/06/15/javascript/%E9%82%8F%E8%BC%AF%E5%88%A4%E6%96%B7%E4%B9%8B%E8%A1%93/</url>
    <content><![CDATA[<h2 id="流程圖與-whimsical"><a href="#流程圖與-whimsical" class="headerlink" title="流程圖與 whimsical"></a>流程圖與 <a href="https://whimsical.com/4oYtsHWjADWsieeNrjY1Xa">whimsical</a></h2><p>首先，當我們在一開始學習 JavaScript 時，總是遇到題目就卡住，明明就知道觀念了，但合起來變成情境題，卻不知道如何下手。這時，我們要知道，我們可以畫流程圖，把題目理清楚，一個步驟一個步驟做拆解。可以用以下方法練習畫流程圖。</p>
<ul>
<li>步驟一：定義程式目的</li>
<li>步驟二：設定初始資料狀態</li>
<li>步驟三：依照目的進行任務拆解<span id="more"></span></li>
</ul>
<h2 id="比較運算子、邏輯運算子"><a href="#比較運算子、邏輯運算子" class="headerlink" title="比較運算子、邏輯運算子"></a>比較運算子、邏輯運算子</h2><ul>
<li>比較運算子： &gt;、&gt;=、&lt;、&lt;=、兩個 ==</li>
<li>兩個等於與三個等於的差異：差在三個 === 為嚴謹模式，型別必須也要相等</li>
<li>邏輯運算子：&amp;&amp;（And）、||（Or）</li>
</ul>
<h2 id="if、else-if、else"><a href="#if、else-if、else" class="headerlink" title="if、else if、else"></a>if、else if、else</h2><ul>
<li>if：是否需要帶雨具</li>
<li>if、else if：是否滿 18 歲</li>
<li>if+變數累積：徽章+=1</li>
<li>if、else if、else：想吃什麼東西？最後選擇到 else</li>
</ul>
<h2 id="剪刀石頭布"><a href="#剪刀石頭布" class="headerlink" title="剪刀石頭布"></a>剪刀石頭布</h2><blockquote>
<p>以結果論</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(playerA == playerB)&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">&#x27;平手&#x27;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>((playerA == <span class="string">&#x27;石頭&#x27;</span> &amp;&amp; playerB == <span class="string">&#x27;剪刀&#x27;</span>) || (playerA == <span class="string">&#x27;剪刀&#x27;</span> &amp;&amp; playerB ==<span class="string">&#x27;布&#x27;</span>) || (playerA ==<span class="string">&#x27;布&#x27;</span> &amp;&amp; playerB ==<span class="string">&#x27;石頭&#x27;</span>))&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">&#x27;playerA win&#x27;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">&#x27;playerB win&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>重新認識 JavaScript 之術</title>
    <url>/2021/06/14/javascript/%E9%87%8D%E6%96%B0%E8%AA%8D%E8%AD%98-JavaScript-%E4%B9%8B%E8%A1%93/</url>
    <content><![CDATA[<h2 id="知識點"><a href="#知識點" class="headerlink" title="知識點"></a>知識點</h2><ol>
<li>學習 JS 環境與除錯</li>
<li>變數：型別、命名規則、資料處理</li>
<li>變數：記憶體存放</li>
</ol>
<h3 id="學習-JS-環境與除錯"><a href="#學習-JS-環境與除錯" class="headerlink" title="學習 JS 環境與除錯"></a>學習 JS 環境與除錯</h3><ul>
<li>建立環境<ol>
<li>新增 index.html、all.js</li>
<li>輸出語法 alert(“Hello world!!”) 觀看是否有成功</li>
</ol>
</li>
</ul>
<h3 id="變數：型別、命名規則、資料處理"><a href="#變數：型別、命名規則、資料處理" class="headerlink" title="變數：型別、命名規則、資料處理"></a>變數：型別、命名規則、資料處理</h3><ul>
<li><p>宣告變數流程</p>
<span id="more"></span>

  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>; <span class="comment">// 宣告一個變數為 a，並賦予值為數字型別 1</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="number">0</span>; <span class="comment">// 宣告一個 b 變數，並賦予一個 0 的數字型別</span></span><br><span class="line">a = <span class="number">3</span>; <span class="comment">// 將 3 重新賦予值 至變數 a，一個數字3的型別</span></span><br><span class="line">a = b + <span class="number">2</span>; <span class="comment">// 將變數 b + 2 ，並重新賦予值至變數 a，一個數字 5 的型別</span></span><br><span class="line">a - b; <span class="comment">// 沒有做任何事，因為並未賦予值</span></span><br><span class="line">b += <span class="number">1</span>; <span class="comment">// 將變數 b + 1，並重新賦予值至變數 b，一個數字 1 的型別</span></span><br></pre></td></tr></table></figure></li>
<li><p>原始型別 (Primitive Type)</p>
<ul>
<li>number 數字</li>
<li>string 字串</li>
<li>boolean 布林true false</li>
<li>undefined 未被賦予值</li>
<li>null （與undefined差別為：有被賦予值）為空值</li>
<li>symbol (不用理會這個)</li>
</ul>
</li>
</ul>
<blockquote>
<p>學變數，讓電腦幫您記錄資訊，可用 let、const、var 來宣告變數，除了原始型別 (Primitive Type)外，還有物件型別</p>
</blockquote>
<ul>
<li><p>JS 變數命名觀念</p>
<ul>
<li>使用駝峰式命名</li>
<li>初期練習請都用小駝峰命名，例如 isClose、fatherName</li>
</ul>
</li>
<li><p>字串與數字型別講解</p>
<ul>
<li>數字：計算機功能、支援格式、變數帶變數、NaN</li>
<li>字串：字串相加、數字與字串相加轉型、樣版字面值</li>
<li>賦值運算子：+=、-=、a++、a–</li>
<li>輔助語法：typeof、console.log</li>
</ul>
</li>
</ul>
<h3 id="賦值運算子"><a href="#賦值運算子" class="headerlink" title="賦值運算子"></a>賦值運算子</h3><ul>
<li><p>有 +=</p>
</li>
<li><p>有 -=</p>
</li>
<li><p>有 ++</p>
</li>
<li><p>有 - -</p>
</li>
<li><p>有 <strong>自動轉型</strong></p>
<ol>
<li><p>數字 ＋ 字串 = 字串</p>
<pre><code> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a+b);</span><br><span class="line"><span class="comment">// 11</span></span><br><span class="line"><span class="comment">// 若有任一運算元是字串，則以字串串接為優先</span></span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>數字 - 字串 ＝ 數字</p>
<pre><code> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> e = <span class="number">10</span> - <span class="string">&quot;2&quot;</span>;</span><br><span class="line"><span class="comment">// e = 8</span></span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>字串 - 字串 ＝ 數字</p>
<pre><code> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> f = <span class="string">&quot;10&quot;</span> - <span class="string">&quot;2&quot;</span>;</span><br><span class="line"><span class="comment">// f = 8</span></span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>+運算子可以讓單一值轉型成數值</p>
<pre><code> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> b = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> b); <span class="comment">//string</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> +b);<span class="comment">// number</span></span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>若有任一運算元是NaN，運算結果會是NaN</p>
<pre><code> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&#x27;string&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a*b);</span><br><span class="line"><span class="comment">//NaN</span></span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p><strong>字串轉型成數字：可以使用 parsInt（字串）（從表單取出來的都是字串型別）</strong></p>
<pre><code> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="built_in">parseInt</span>(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a+b);</span><br><span class="line"><span class="comment">//2</span></span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p><strong>數字轉型成字串：可以使用 數字變數.toString()</strong></p>
<pre><code> <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> b = <span class="number">1</span>;</span><br><span class="line">b = b.toString();</span><br><span class="line"><span class="built_in">console</span>.log(b+<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 11</span></span><br></pre></td></tr></table></figure>
</code></pre>
</li>
</ol>
</li>
</ul>
<h3 id="字串"><a href="#字串" class="headerlink" title="字串"></a>字串</h3><ul>
<li><p>字串處理方法：</p>
<ol>
<li><p>length 計算字串長度</p>
<pre><code> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&#x27;good&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a.length);</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>trim 去掉空白元件</p>
<pre><code> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&#x27;  good  &#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> b = a.trim();</span><br><span class="line"><span class="built_in">console</span>.log(b.length);</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
</ol>
</li>
</ul>
<h3 id="變數：記憶體存放"><a href="#變數：記憶體存放" class="headerlink" title="變數：記憶體存放"></a>變數：記憶體存放</h3><p>變數重要三劍客：記憶體位置、變數、型別<br>記憶體位置介紹：<img src="js01.png" alt="記憶體圖"></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JS 衝刺班心得分享</title>
    <url>/2021/04/15/%E5%BF%83%E5%BE%97/JS-%E8%A1%9D%E5%88%BA%E7%8F%AD%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<p><img src="https://images.unsplash.com/photo-1483859562288-7f9e4c80c1cc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1961&q=80" alt="os"></p>
<h2 id="不跨出舒適圈，怎麼知道自己的極限在哪？"><a href="#不跨出舒適圈，怎麼知道自己的極限在哪？" class="headerlink" title="不跨出舒適圈，怎麼知道自己的極限在哪？"></a>不跨出舒適圈，怎麼知道自己的極限在哪？</h2><p>你有沒有跟我一樣的問題？</p>
<p>迷茫著<br>在程式路上，如行屍走肉般</p>
<span id="more"></span>

<p>或許是沒有找到方向，那我給你跟我一樣的選擇，加入六角大家庭吧。</p>
<p>學習過程中，不知不覺，喜歡上程式這個領域，過去一年自己總是悶著頭，一股腦兒栽在電腦前，東摸摸，西摸摸，很沒有時間觀念的學習程式，我也不知道我到底在幹嘛？<br>直到最近，我慢慢意識到我總不能無限制的自我學習，因此很果斷的加入這次的 JS 直播班。</p>
<p>因為我知道自己有一個毛病，欠人在屁股後面追著你跑。</p>
<h2 id="這兩個月到底學會什麼？"><a href="#這兩個月到底學會什麼？" class="headerlink" title="這兩個月到底學會什麼？"></a>這兩個月到底學會什麼？</h2><p>在這之前，已經先自己學習了 JＳ，所以一到四週基礎的課程還算好吸收，但在第五週之後，開始漸漸有難度了。</p>
<p>第六堂：AJAX 操控伺服器之術<br>因為我對於 api 串接並沒有特別熟悉，所以就開始天天練習串接 api ，把寫法練到熟為止。課堂中，老師時常會以幽默風趣口吻，來做講解，所以偶爾能用這些零碎時間把不懂地方，馬上做即時發問。</p>
<p>第七堂：第三方 JS 套件整合之術<br>這是我覺得這次課程中最難部分，在整合C3.js套件時，我必須先把 API 的資料做資料處理，考驗的是對於物件、陣列的整合運用。所以陣列、物件若不熟悉，沒有融會貫通，通常是會在這裡大大卡關。</p>
<p>第八、九堂：API 講解<br>主要是對於 api 方法操控，考驗的是購物車的資料增加、刪除、修改及後端資料串接。<br>因此，只要能熟練的把 todoList 的範例，靈活寫出來，對於其他大大小小的串接專案，或許都不是問題了。</p>
<h2 id="推薦的理由呢？"><a href="#推薦的理由呢？" class="headerlink" title="推薦的理由呢？"></a>推薦的理由呢？</h2><p>優勢在哪</p>
<p>我想用圖片說明，可以更有信服力。</p>
<h3 id="助教作業海…XD"><a href="#助教作業海…XD" class="headerlink" title="助教作業海…XD"></a>助教作業海…XD</h3><p>  <img src="https://i.imgur.com/fvkLhwF.png" alt="助教作業海"></p>
<h3 id="解每日任務"><a href="#解每日任務" class="headerlink" title="解每日任務"></a>解每日任務</h3><p>  <img src="https://i.imgur.com/3FmKO1l.png" alt="解每日任務"></p>
<h3 id="BMI-kata-盛況"><a href="#BMI-kata-盛況" class="headerlink" title="BMI kata 盛況"></a>BMI kata 盛況</h3><p>  <img src="https://i.imgur.com/elaBu3y.png" alt="BMI kata 盛況"></p>
<h3 id="小組任務討論"><a href="#小組任務討論" class="headerlink" title="小組任務討論"></a>小組任務討論</h3><p>  <img src="https://i.imgur.com/VkFuCpv.png" alt="小組任務討論"></p>
<h3 id="每週二穎旻助教直播"><a href="#每週二穎旻助教直播" class="headerlink" title="每週二穎旻助教直播"></a>每週二穎旻助教直播</h3><p>  <img src="https://i.imgur.com/YiMMn1q.png" alt="每週二穎旻助教直播"></p>
<p>還有還有，最重要的是助教回覆速度都超快，以及每日都有線上助教待命，等你問問題。</p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>六角學院</tag>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title>從Wireshark深入了解網路請求</title>
    <url>/2021/06/22/%E7%B6%B2%E8%B7%AF%E5%9F%BA%E7%A4%8E%E7%90%86%E8%AB%96/%E5%BE%9EWireshark%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E7%B6%B2%E8%B7%AF%E8%AB%8B%E6%B1%82/</url>
    <content><![CDATA[<h2 id="Wireshark（監聽封包）"><a href="#Wireshark（監聽封包）" class="headerlink" title="Wireshark（監聽封包）"></a>Wireshark（監聽封包）</h2><ul>
<li>我們可以透過 wireshark 來查看網頁傳輸的過程，過程中到底經過了哪些事情？</li>
<li>Wireshark 常見指令<ul>
<li>尋找來源 IP：ip.src== xxx.xxx.xxx.xxx</li>
<li>或 ( or )：ip.src== xx.xx.xx.xx or ip.dst == xx.xx.xx.xx</li>
<li>port： tcp.port == 80</li>
<li>網路請求：http.request.method==”POST”<span id="more"></span></li>
</ul>
</li>
<li>frame 實體層</li>
<li>Ethernet 乙太網路卡</li>
<li>Internet Protocol（IP）</li>
<li>Transmission Control Protocol（TCP）</li>
<li>Hypertext Transter Protocol 封包資訊<br><img src="frame.png" alt="frame"></li>
</ul>
<h2 id="當發出一個-GET-POST-請求時，中間過程會經過哪些傳輸協定？"><a href="#當發出一個-GET-POST-請求時，中間過程會經過哪些傳輸協定？" class="headerlink" title="當發出一個 GET/POST 請求時，中間過程會經過哪些傳輸協定？"></a>當發出一個 GET/POST 請求時，中間過程會經過哪些傳輸協定？</h2><ul>
<li><p>今天我發出一個請求時候，會跟對方經由三次的握手，然後才會建立雙向溝通，雙方才會互相傳輸資料，我可以跟對方要資料，對方才會透過TCP傳封包給我，封包傳完會獲得200 ok，我才可以在瀏覽器上顯示這個資料，所以當網頁載入進來以後，我才可以顯示h1，瀏覽器會針對dom tree去渲染我的網頁內容，當渲染過程中，需要圖片或css，我才會再去發出一個http請求到對方伺服器，對方再透過TCP傳封包給我，再回傳200 ok，資料傳輸完成後，會再經由四次的揮手，結束這次的中斷連線。</p>
</li>
<li><p>傳輸過程</p>
<blockquote>
<p>瀏覽器： 誒伺服器你在不在？<br>伺服器：我在啊，你要傳資料喔？<br>瀏覽器：對啊，我要開始傳囉！<br>瀏覽器：get 請求 <a href="http://www.hexschool.com/">www.hexschool.com</a><br>伺服器(TCP)：1506封包<br>伺服器(TCP)：1506封包<br>伺服器(TCP)：1506封包<br>伺服器(Http)：200 ok<br>瀏覽器：渲染網頁<br>瀏覽器： get 1.css<br>瀏覽器： get 2.css<br>瀏覽器：get logo.png<br>伺服器(TCP)：1506封包<br>伺服器(TCP)：1506封包<br>伺服器(TCP)：1506封包<br>伺服器(Http)：200 ok<br>四次道別</p>
</blockquote>
<p><img src="tcp.png" alt="UDP"></p>
</li>
</ul>
<h2 id="OSI-與-TCP-IP"><a href="#OSI-與-TCP-IP" class="headerlink" title="OSI 與 TCP/IP"></a>OSI 與 TCP/IP</h2><ul>
<li><p>OSI：1984年，ISO 發布了著名的 ISO/IEC 7498 標準，它定義了網路互聯的 7 層框架，也就是開放式系統互聯參考模型。</p>
</li>
<li><p>TCP/IP：被視為 OSI 七層協定的簡化版，1990 年開始蓬勃發展(www/mail)。</p>
<p><img src="001.png" alt=" "></p>
</li>
</ul>
<h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h3><ul>
<li><p>嚴謹 速度慢</p>
</li>
<li><p>TCP 表頭 20Bytes - 每個 TCP 封包 data 可夾帶 40~1500 Bytes Data 資料</p>
<p><img src="TCP_header.png" alt="TCP_header"></p>
</li>
</ul>
<h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><ul>
<li><p>不嚴謹，速度快，適用在直播、socket 聯天室</p>
<p><img src="udp.png" alt="UDP"></p>
</li>
</ul>
<h2 id="HTTPS-與-HTTP-的差異"><a href="#HTTPS-與-HTTP-的差異" class="headerlink" title="HTTPS 與 HTTP 的差異"></a>HTTPS 與 HTTP 的差異</h2><ul>
<li><p>HTTPS（全稱：Hyper Text Transfer Protocol over Secure Socket Layer）</p>
</li>
<li><p>SSL 加密無法觀看傳送內容</p>
<ul>
<li>TLS 1.2（SSL 3.3）</li>
<li>免費憑證 cloudflare</li>
</ul>
</li>
<li><p>HTTP 是 80 port、HTTPS 是  443 port</p>
</li>
<li><p>HTTP 是 應用層、HTTPS 是傳輸層</p>
<p><img src="https.png" alt="https"></p>
</li>
</ul>
<h2 id="發送網路請求管道"><a href="#發送網路請求管道" class="headerlink" title="發送網路請求管道"></a>發送網路請求管道</h2><ul>
<li>JS AJAX</li>
<li>POSTMAN</li>
<li>cURL (終端機)</li>
<li>各種後端語言</li>
<li>IOS/Android</li>
<li>Desktop App</li>
</ul>
<h2 id="常見問答"><a href="#常見問答" class="headerlink" title="常見問答"></a>常見問答</h2><ul>
<li>一部 100 MB 影片是否能只用一個封包來進行傳送？<ul>
<li>錯，一個封包只能傳送 1506 btyes。</li>
</ul>
</li>
<li>如果一個網頁有 10 張圖片，是否要執行十次 TCP 三項交握來獲得？<ul>
<li>不用，三項交握僅要第一次即可。（像打電話，打一次就好）</li>
</ul>
</li>
<li>在 post API 時，可以安心在 http 網站使用，不會被人看到資料或竄改封包<ul>
<li>錯，http採明文傳輸，封包被攔截就會被看光資料。</li>
</ul>
</li>
<li>如果講求傳輸速度，就算資料掉一些也不打緊的話，該用 TCP 還是 UDP 傳輸？<ul>
<li>UDP 不管傳送是否接收。</li>
</ul>
</li>
<li>只能寫 JavaScript AJAX 來撈 API 資料，無法透過其他方式來發送請求<ul>
<li>錯，可用發送網路請求管道以上方法。</li>
</ul>
</li>
<li>後端語言只能開啟 web 伺服器與接資料庫，無法針對 TCP/IP、UDP 來設計服務?<ul>
<li>錯，可以做很多設計</li>
</ul>
</li>
<li>如果要看 HTTP 協定傳送， Fiddler、wireshark 都可以？<ul>
<li>對。</li>
</ul>
</li>
<li>wireshark 每個封包都一定會有以下內容嗎？<ol>
<li>Frame、</li>
<li>Ethernet II、</li>
<li>Internet Protocol Version 4、</li>
<li>Transmission Control Protocol、</li>
<li>Hypertext Transfer Protocol</li>
</ol>
<ul>
<li>錯，根據不同的 ipv4 或 ipv6 會有所不一樣</li>
</ul>
</li>
</ul>
<p>參考網站：<a href="https://quip.com/exlbAHYLKdTb">從Wireshark深入了解網路請求</a></p>
]]></content>
      <categories>
        <category>網路基礎理論</category>
      </categories>
      <tags>
        <tag>網路基礎理論</tag>
      </tags>
  </entry>
  <entry>
    <title>DOM Event 事件處理</title>
    <url>/2021/06/23/javascript/DOM-Event-%E4%BA%8B%E4%BB%B6%E8%99%95%E7%90%86/</url>
    <content><![CDATA[<h2 id="Dom-（Dom-tree）節點樹狀圖"><a href="#Dom-（Dom-tree）節點樹狀圖" class="headerlink" title="Dom （Dom tree）節點樹狀圖"></a>Dom （Dom tree）節點樹狀圖</h2><ul>
<li>在學習dom event的事件處理前，我們先來了解什麼是節點樹狀圖。</li>
</ul>
<blockquote>
<p>DOM 是一個將 HTML 文件以樹狀的結構來表示的模型，而組合起來的樹狀圖，我們稱之為「DOM Tree」<br>瀏覽器是從上到下一行一行的讀取，DOM tree 就是把所有的節點拆開後，彼此的關係會像一棵樹，故取名之，想要透過 DOM API 取得節點，透過 JavaScript 可以這樣寫。</p>
</blockquote>
<span id="more"></span>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根據傳入的值，找到 DOM 中 id 為 &#x27;xxx&#x27; 的元素。</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 針對給定的 tag 名稱，回傳所有符合條件的 NodeList 物件 [註1]</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 針對給定的 class 名稱，回傳所有符合條件的 NodeList 物件。</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 針對給定的 Selector 條件，回傳第一個 或 所有符合條件的 NodeList。</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;xxx&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>而透過 DOM API 選取出來的節點，我們可以透過操作 <code>textContent</code> 屬性來變更它的文字。</p>
<p>設定一個 HTML 屬性節點為 <code>id</code>，名稱為 <code>greet</code>：</p>
<p><code>&lt;h1 id=&quot;greet&quot;&gt;&lt;/h1&gt;</code></p>
<p>可以先透過 <code>document.querySelector()</code> 選取方法來取得節點，然後修改 <code>textContent</code> 屬性：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">document</span>.querySelector(<span class="string">&#x27;#greet&#x27;</span>).textContent = <span class="string">&#x27;Hello World!&#x27;</span>&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>這樣就可以透過 JavaScript 在網頁上輸出 <strong>“Hello World!”</strong> 囉！</p>
<h2 id="DOM-選取網頁元素"><a href="#DOM-選取網頁元素" class="headerlink" title="DOM - 選取網頁元素"></a>DOM - 選取網頁元素</h2><ol>
<li><p>類別選擇器： 選取網頁上的元素，再做動態修改</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> el = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.header&#x27;</span>);</span><br><span class="line"><span class="comment">//選取 h1             // 選取網頁上的元素  Css選擇器</span></span><br></pre></td></tr></table></figure></li>
<li><p>textContent 寫入文字資料</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">el.textContent = <span class="string">&#x27;Hello World&#x27;</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>innerHTML 插入 HTML 標籤———————&gt; 會覆蓋原本資料(新增網頁內容)</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> yahoo =<span class="string">&quot;https://www.yahoo.com.tw&quot;</span></span><br><span class="line"><span class="comment">//加入變數 yahoo</span></span><br><span class="line">el.innerHTML = <span class="string">`&lt;h1&gt;&lt;a href=&quot;<span class="subst">$&#123;yahoo&#125;</span>&quot;&gt;&lt;span&gt;標題&lt;/span&gt;&lt;a/&gt;&lt;/h1&gt;`</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>innerHTML 與textContent 差異</p>
<p> innerHTML：可以可以針對element、內容文字、屬性元素 (可以變成網頁結構)-&gt; 網頁結構</p>
<p> textContent：只可以針對文字做寫入（所以不會變成網頁結構）                 ———&gt;文字內容</p>
</li>
<li><p>setAttribute ————&gt;設定屬性</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> mylink = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.header a&#x27;</span>);</span><br><span class="line">mylink.setAttribute(<span class="string">&#x27;href&#x27;</span>,<span class="string">&#x27;https://yahoo.com.tw&#x27;</span>);</span><br><span class="line">mylink.setAttribute(<span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;red&#x27;</span>);</span><br></pre></td></tr></table></figure></li>
<li><p>querySelectorAll ————&gt;可重複選取多個元素</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> link = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(link);</span><br><span class="line">link[<span class="number">0</span>].setAttribute(<span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">link[<span class="number">1</span>].setAttribute(<span class="string">&#x27;href&#x27;</span>,<span class="string">&#x27;https://google.com&#x27;</span>);</span><br><span class="line"><span class="comment">// 以下為 querySelectorAll 抓到的節點列表</span></span><br><span class="line">NodeList(<span class="number">2</span>) [a, a]</span><br><span class="line"><span class="number">0</span>: a.red</span><br><span class="line"><span class="number">1</span>: a</span><br><span class="line">length: <span class="number">2</span></span><br><span class="line">__proto__: NodeList</span><br></pre></td></tr></table></figure></li>
<li><p>取值方法：</p>
<ul>
<li><p>.getAttribute ——&gt;取出屬性的值</p>
  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> link = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(link);</span><br><span class="line">link.setAttribute(<span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;red&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(link.getAttribute(<span class="string">&#x27;class&#x27;</span>));</span><br><span class="line">                           <span class="comment">//抓到屬性的值</span></span><br></pre></td></tr></table></figure></li>
<li><p>.textContent———&gt;取出文字內容</p>
</li>
<li><p>.innerHTML———&gt;取出HTML結構出來</p>
  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">//html</span></span><br><span class="line">&lt;a href=<span class="string">&quot;#&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;h1&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>標籤<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&lt;/a&gt;</span><br><span class="line"><span class="comment">//js</span></span><br><span class="line"><span class="keyword">let</span> link = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> content = link.innerHTML;</span><br><span class="line"><span class="built_in">console</span>.log(content);</span><br><span class="line"><span class="keyword">let</span> cont1 = link.textContent;</span><br><span class="line"><span class="built_in">console</span>.log(cont1);</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>表單元素取值方式</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;good&quot;</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;choose&quot;</span> <span class="attr">id</span>=<span class="string">&quot;id&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;台中&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;台北&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;高雄&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> txt = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.header&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(txt.value);</span><br><span class="line">txt.value = <span class="string">&#x27;not good&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> list = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.list option&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(list[<span class="number">2</span>].value);</span><br><span class="line"><span class="comment">// 取到高雄值</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="Event-事件處理"><a href="#Event-事件處理" class="headerlink" title="Event 事件處理"></a>Event 事件處理</h2><ol>
<li><p>addEventListener（監聽）</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.button&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> title =<span class="built_in">document</span>.querySelector(<span class="string">&#x27;h1&#x27;</span>);</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    title.textContent = <span class="string">&#x27;你好嗎？&#x27;</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>透過 nodeNmae 瞭解目前 DOM 的 HTML 位置</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.button&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(btn.nodeName);</span><br></pre></td></tr></table></figure></li>
<li><p>e.target - 了解目前所在元素位置</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.button&#x27;</span>);</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e.target);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 進階運用</span></span><br><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.button&#x27;</span>);</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e.target.nodeName);</span><br><span class="line">    <span class="keyword">if</span>(e.target.nodeName == <span class="string">&#x27;BUTTON&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;你按對了&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>AJAX 操控伺服器之術</title>
    <url>/2021/06/23/javascript/AJAX-%E6%93%8D%E6%8E%A7%E4%BC%BA%E6%9C%8D%E5%99%A8%E4%B9%8B%E8%A1%93/</url>
    <content><![CDATA[<h2 id="網路請求"><a href="#網路請求" class="headerlink" title="網路請求"></a>網路請求</h2><h3 id="XHR-介紹"><a href="#XHR-介紹" class="headerlink" title="XHR 介紹"></a>XHR 介紹</h3><ul>
<li>傳統 Ajax 指的是 XMLHttpRequest（XHR），最早出現的傳送後端請求技術，隸屬於原始js中，核心使用XMLHttpRequest物件，多個請求之間如果有先後關係的話，就會出現回撥地獄。JQuery ajax 是對原生XHR的封裝，除此以外還增添了對JSONP的支援。經過多年的更新維護，真的已經是非常的方便了。<span id="more"></span></li>
<li>但有以下缺點：<ul>
<li>本身是針對MVC的程式設計,不符合現在前端MVVM的浪潮</li>
<li>基於原生的XHR開發，XHR本身的架構不清晰。</li>
<li>JQuery整個專案太大，單純使用ajax卻要引入整個JQuery非常的不合理（採取個性化打包的方案又不能享受CDN服務）</li>
<li>不符合關注分離（Separation of Concerns）的原則</li>
<li>配置和呼叫方式非常混亂，而且基於事件的非同步模型不友好。</li>
</ul>
</li>
</ul>
<h3 id="axios-介紹"><a href="#axios-介紹" class="headerlink" title="axios 介紹"></a>axios 介紹</h3><ul>
<li>套件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> list = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.list&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`https://hexschool.github.io/ajaxHomework/data.json`</span>;</span><br><span class="line">axios.get(url).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = res.data[<span class="number">0</span>].name;</span><br><span class="line">    list.textContent = data;</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>Vue2.0之後，推薦大家用axios替換JQuery ajax，想必讓axios進入了很多人的目光中。axios 是一個基於Promise 用於瀏覽器和 nodejs 的 HTTP 客戶端，本質上也是對原生XHR的封裝，只不過它是Promise的實現版本，符合最新的ES規範，它本身具有以下特徵<ul>
<li>從瀏覽器中建立 XMLHttpRequest</li>
<li>支援 Promise API</li>
<li>客戶端支援防止CSRF</li>
<li>提供了一些併發請求的介面（重要，方便了很多的操作）</li>
<li>從 node.js 建立 http 請求</li>
<li>攔截請求和響應</li>
<li>轉換請求和響應資料</li>
<li>取消請求</li>
<li>自動轉換JSON資料</li>
</ul>
</li>
</ul>
<blockquote>
<p>注意：防止CSRF:就是讓你的每個請求都帶一個從cookie中拿到的key, 根據瀏覽器同源策略，假冒的網站是拿不到你cookie中得key的，這樣，後臺就可以輕鬆辨別出這個請求是否是使用者在假冒網站上的誤導輸入，從而採取正確的策略。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">    method: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    url: <span class="string">&#x27;/user/1&#x27;</span>,</span><br><span class="line">    data: &#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line">.then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="fetch-介紹"><a href="#fetch-介紹" class="headerlink" title="fetch 介紹"></a>fetch 介紹</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> list = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.list&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> url = <span class="string">`https://hexschool.github.io/ajaxHomework/data.json`</span>;</span><br><span class="line">fetch(url)</span><br><span class="line">.then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.json();</span><br><span class="line">&#125;)</span><br><span class="line">.then(<span class="function"><span class="params">myJson</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(myJson[0].name);</span></span><br><span class="line">    list.textContent = myJson[<span class="number">0</span>].name;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li>fetch號稱是AJAX的替代品，是在ES6出現的，使用了ES6中的promise物件。Fetch是基於promise設計的。Fetch的程式碼結構比起ajax簡單多了，引數有點像jQuery ajax。但是，一定記住fetch不是ajax的進一步封裝，而是原生js，沒有使用XMLHttpRequest物件。 fetch的優點：<ul>
<li>符合關注分離，沒有將輸入、輸出和用事件來跟蹤的狀態混雜在一個物件裡</li>
<li>更好更方便的寫法 坦白說，上面的理由對我來說完全沒有什麼說服力，因為不管是Jquery還是Axios都已經幫我們把xhr封裝的足夠好，使用起來也足夠方便，為什麼我們還要花費大力氣去學習fetch？我認為fetch的優勢主要優勢就是：</li>
<li>語法簡潔，更加語義化</li>
<li>基於標準 Promise 實現，支援 async/await</li>
<li>重構方便，使用 isomorphic-fetch<br>- 更加底層，提供的API豐富（request, response）</li>
<li>脫離了XHR，是ES規範裡新的實現方式 最近在使用fetch的時候，也遇到了不少的問題：fetch是一個低層次的API，你可以把它考慮成原生的XHR，所以使用起來並不是那麼舒服，需要進行封裝。例如：</li>
<li>fetch只對網路請求報錯，對400，500都當做成功的請求，伺服器返回 400，500 錯誤碼時並不會 reject，只有網路錯誤這些導致請求不能完成時，fetch 才會被 reject。</li>
<li>fetch預設不會帶cookie，需要新增配置項： fetch(url, {credentials: ‘include’})</li>
<li>fetch不支援abort，不支援超時控制，使用setTimeout及Promise.reject的實現的超時控制並不能阻止請求過程繼續在後臺執行，造成了流量的浪費</li>
<li>fetch沒有辦法原生監測請求的進度，而XHR可以</li>
</ul>
</li>
</ul>
<h2 id="Ajax-非同步觀念"><a href="#Ajax-非同步觀念" class="headerlink" title="Ajax 非同步觀念"></a>Ajax 非同步觀念</h2><p><img src="ajax.png" alt="ajax"></p>
<h2 id="HTTP-請求方法"><a href="#HTTP-請求方法" class="headerlink" title="HTTP 請求方法"></a>HTTP 請求方法</h2><ol>
<li>get</li>
<li>post<ul>
<li>與 get 差別在於，可以傳送資料給對方，可以傳送帳號密碼到伺服器，對方會回傳我 state 200</li>
</ul>
</li>
<li>delete</li>
</ol>
<h2 id="四種常見的-POST-請求-content-type-介紹"><a href="#四種常見的-POST-請求-content-type-介紹" class="headerlink" title="四種常見的 POST 請求 content-type 介紹"></a>四種常見的 POST 請求 content-type 介紹</h2><ol>
<li>application/x-www-form-urlencoded</li>
<li>application/json</li>
<li>multipart/form-data</li>
<li>text/plain</li>
</ol>
<h2 id="參考文件"><a href="#參考文件" class="headerlink" title="參考文件"></a>參考文件</h2><p><a href="https://www.796t.com/article.php?id=253572">文件</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>取得html 屬性的值及新增屬性</title>
    <url>/2021/06/23/javascript/%E5%8F%96%E5%BE%97html-%E5%B1%AC%E6%80%A7%E7%9A%84%E5%80%BC%E5%8F%8A%E6%96%B0%E5%A2%9E%E5%B1%AC%E6%80%A7/</url>
    <content><![CDATA[<h2 id="getAttribute-取得屬性的值"><a href="#getAttribute-取得屬性的值" class="headerlink" title="getAttribute 取得屬性的值"></a>getAttribute 取得屬性的值</h2><ol>
<li><p>使用 getAttribute 可以回傳一個元素上的指定屬性值，語法如下:</p>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">element.getAttribute(<span class="string">&quot;屬性名稱&quot;</span>);</span><br></pre></td></tr></table></figure>
 <span id="more"></span>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;targetId&quot;</span>&gt;</span>目標 Id<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">//</span><br></pre></td></tr></table></figure>

 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> element = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#targetId&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(element.getAttribute(<span class="string">&#x27;id&#x27;</span>));</span><br><span class="line"><span class="comment">// targetId</span></span><br></pre></td></tr></table></figure></li>
<li><p>使用 getAttribute 取用屬性時，如果指定的屬性不存在，則會回傳 null 或 “”。</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;targetId&quot;</span>&gt;</span>目標 Id<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> element = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#targetId&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(element.getAttribute(<span class="string">&#x27;name&#x27;</span>));</span><br><span class="line"><span class="comment">// 由於 name 屬性不存在，因此會回傳 null</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="setAttribute-新增屬性資料"><a href="#setAttribute-新增屬性資料" class="headerlink" title="setAttribute 新增屬性資料"></a>setAttribute 新增屬性資料</h2><ol>
<li><p>可以使用 setAttribute 替指定元素設定屬性值，語法如下</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">element.setAttribute(&quot;屬性名稱&quot;, &quot;屬性值&quot;);</span><br></pre></td></tr></table></figure>

 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;targetId&quot;</span>&gt;</span>目標 Id<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.colorRed</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FF0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> element = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#targetId&#x27;</span>);</span><br><span class="line">element.setAttribute(<span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;colorRed&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>API 介紹</title>
    <url>/2021/06/23/javascript/API-%E4%BB%8B%E7%B4%B9/</url>
    <content><![CDATA[<h2 id="api"><a href="#api" class="headerlink" title="api"></a>api</h2><ul>
<li>中文叫應用程式介面</li>
<li>發出網路請求 web API ，獲得你要的資訊，例：<ul>
<li>JSON：我要用 <a href="https://raw.githubusercontent.com/hexschool/js-traninging-week6API/main/data.json">BMI kaka API</a>，取得所有人的 BMI 練功資訊<span id="more"></span></li>
<li>JSON：我要用 <a href="https://ptx.transportdata.tw/MOTC?t=Tourism&v=2#!/Tourism/TourismApi_ScenicSpot_0">MOTC API</a> 服務，取得景點資料</li>
<li>JSON：我要<strong>申請</strong> <a href="https://newsapi.org/">NEWS API</a>，獲得相關新聞資訊</li>
<li>介面服務：我要<strong>申請</strong> <a href="https://developers.google.com/maps/documentation/javascript/adding-a-google-map#key">Google Map</a> 服務，取得地圖資訊，<a href="https://cloud.google.com/maps-platform/pricing?hl=zh-tw">定價</a>、<a href="https://mile.cloud/zh/resources/blog/195/Google%20Maps%20Platform%20%E7%9A%84%E6%9C%80%E4%BD%B3%E5%81%9A%E6%B3%95%EF%BC%9A%E9%99%90%E5%88%B6%20API%20%E9%87%91%E9%91%B0%20">限制方式</a></li>
<li>前後端介接：我要介接後端 API，開發前端介面功</li>
</ul>
</li>
</ul>
<h2 id="API-服務申請流程"><a href="#API-服務申請流程" class="headerlink" title="API 服務申請流程"></a>API 服務申請流程</h2><blockquote>
<p>API 種類</p>
</blockquote>
<ol>
<li>可以在瀏覽器端讀取使用，不需申請帳號：<a href="https://ptx.transportdata.tw/MOTC?t=Tourism&v=2#!/Tourism/TourismApi_ScenicSpot_0">MOTC API</a></li>
<li>可以在瀏覽器端讀取使用，需要申請帳號獲得金鑰： <a href="https://developers.google.com/maps/documentation/javascript/adding-a-google-map#key">Google Map</a></li>
<li>只能在<strong>後端伺服器</strong>讀取，不需申請帳號： <a href="https://data.tainan.gov.tw/dataset/tourists-statis">台南旅遊人數</a></li>
<li>只能在<strong>後端伺服器</strong>讀取，需要申請帳號獲得金鑰： <a href="https://newsapi.org/">NEWS API</a></li>
</ol>
<blockquote>
<p>1.用 text-cors 觀察是否能介接2.瀏覽器端讀取關鍵 header 參數：Access-Control-Allow-Origin: *</p>
</blockquote>
<h2 id="API-Key-TOKEN-夾帶送出種類"><a href="#API-Key-TOKEN-夾帶送出種類" class="headerlink" title="API Key TOKEN 夾帶送出種類"></a>API Key TOKEN 夾帶送出種類</h2><ol>
<li>網址：例如：<a href="https://developers.google.com/maps/documentation/javascript/adding-a-google-map#key">Google Map</a>、<a href="https://newsapi.org/">NEWS API</a></li>
<li>request header，例如：<a href="http://210.69.170.105/popendata/APP_Prog/cht/overview_cht.aspx">故宮 OPEN DATA API</a>、<a href="https://codepen.io/hexschool/pen/yLgaBWV?editors=1010">六角最終關卡管理者端 API</a></li>
</ol>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方 JS 套件整合之術</title>
    <url>/2021/06/23/javascript/%E7%AC%AC%E4%B8%89%E6%96%B9-JS-%E5%A5%97%E4%BB%B6%E6%95%B4%E5%90%88%E4%B9%8B%E8%A1%93/</url>
    <content><![CDATA[<h2 id="C3-js-圖表套件"><a href="#C3-js-圖表套件" class="headerlink" title="C3.js 圖表套件"></a>C3.js 圖表套件</h2><ol>
<li>C3是以D3為底做出來的，先以C3為主</li>
<li><a href="https://c3js.org/gettingstarted.html">C3官網</a> <span id="more"></span>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- Load c3.css --&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/c3/0.7.18/c3.css&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Load d3.js and c3.js --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/d3/5.16.0/d3.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/c3/0.7.18/c3.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="物件資料處理"><a href="#物件資料處理" class="headerlink" title="物件資料處理"></a>物件資料處理</h2><ol>
<li><p>物件數據蒐集：物件計算，可計算陣列裡面各地區人數</p>
 <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">  &#123;</span><br><span class="line">    area:<span class="string">&quot;高雄&quot;</span>,</span><br><span class="line">    name:<span class="string">&quot;小明&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    area: <span class="string">&quot;高雄&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;小天&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    area:<span class="string">&quot;台中&quot;</span>,</span><br><span class="line">    name:<span class="string">&quot;小華&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    area: <span class="string">&quot;台北&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;小華&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 如何轉換成以下格式，計算各地區總人數</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//   高雄:2,</span></span><br><span class="line"><span class="comment">//   台中:1,</span></span><br><span class="line"><span class="comment">//   台北:1</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">let</span> total = &#123;&#125;;</span><br><span class="line">people.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(total[item.area]==<span class="literal">undefined</span>)&#123;</span><br><span class="line">    total[item.area] = <span class="number">1</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    total[item.area] +=<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(total);</span><br></pre></td></tr></table></figure></li>
<li><p>Object.key 做資料關聯陣列再處理</p>
</li>
</ol>
<blockquote>
<p>Object.key 用途：將所有屬性撈出來，變成一個陣列</p>
</blockquote>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> totalObj = &#123;高雄: <span class="number">2</span>, 台北: <span class="number">1</span>, 台中: <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> areaAry = <span class="built_in">Object</span>.keys(totalObj);</span><br><span class="line"><span class="comment">// area output [&quot;高雄&quot;,&quot;台北&quot;,&quot;台中&quot;]</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>用途一：透過資料關聯，做物件取值</p>
  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> totalObj = &#123;高雄: <span class="number">2</span>, 台北: <span class="number">1</span>, 台中: <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> areaAry = <span class="built_in">Object</span>.keys(totalObj);</span><br><span class="line"><span class="comment">// output [&quot;高雄&quot;,&quot;台北&quot;,&quot;台中&quot;]</span></span><br><span class="line">areaAry.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;item&#125;</span>有 <span class="subst">$&#123;totalObj[item]&#125;</span> 人`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>用途二：重組陣列資料 I</p>
  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> totalObj = &#123;高雄: <span class="number">2</span>, 台北: <span class="number">1</span>, 台中: <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> areaAry = <span class="built_in">Object</span>.keys(totalObj);</span><br><span class="line"><span class="comment">// area output [&quot;高雄&quot;,&quot;台北&quot;,&quot;台中&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> newData =[];</span><br><span class="line">areaAry.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> ary =&#123;&#125;;</span><br><span class="line">  ary.area = item;</span><br><span class="line">  ary.num = totalObj[item];</span><br><span class="line">  newData.push(ary);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(newData)</span><br><span class="line"></span><br><span class="line"><span class="comment">// [object Array] (3) output</span></span><br><span class="line">[<span class="comment">// [object Object] </span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;area&quot;</span>: <span class="string">&quot;高雄&quot;</span>,</span><br><span class="line">  <span class="string">&quot;num&quot;</span>: <span class="number">2</span></span><br><span class="line">&#125;,<span class="comment">// [object Object] </span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;area&quot;</span>: <span class="string">&quot;台北&quot;</span>,</span><br><span class="line">  <span class="string">&quot;num&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;,<span class="comment">// [object Object] </span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;area&quot;</span>: <span class="string">&quot;台中&quot;</span>,</span><br><span class="line">  <span class="string">&quot;num&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure></li>
<li><p>用途三：重組陣列資料 II-為 C3.js 所用</p>
  <figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> totalObj = &#123;高雄: <span class="number">2</span>, 台北: <span class="number">1</span>, 台中: <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> areaAry = <span class="built_in">Object</span>.keys(totalObj);</span><br><span class="line"><span class="comment">// area output [&quot;高雄&quot;,&quot;台北&quot;,&quot;台中&quot;]</span></span><br><span class="line"><span class="keyword">let</span> newData = [];</span><br><span class="line">areaAry.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> ary = [];</span><br><span class="line">  ary.push(item);</span><br><span class="line">  ary.push(totalObj[item]);</span><br><span class="line">  newData.push(ary);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newData)</span><br><span class="line"></span><br><span class="line"><span class="comment">// c3 要的資料格式</span></span><br><span class="line"><span class="comment">//[[&quot;高雄&quot;, 2], [&quot;台北&quot;,1], [&quot;台中&quot;, 1]]</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
</search>
